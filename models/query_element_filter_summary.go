// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// QueryElementFilterSummary query element filter summary
//
// swagger:model QueryElementFilterSummary
type QueryElementFilterSummary struct {

	// data type
	// Enum: [0,10,20,40,50]
	DataType int32 `json:"DataType,omitempty"`

	// description
	Description string `json:"Description,omitempty"`

	// end of day
	EndOfDay bool `json:"EndOfDay,omitempty"`

	// filter element
	FilterElement string `json:"FilterElement,omitempty"`

	// group
	Group *QueryElementGroupSummary `json:"Group,omitempty"`

	// has reference data
	HasReferenceData bool `json:"HasReferenceData,omitempty"`

	// Id
	ID int32 `json:"Id,omitempty"`
}

// Validate validates this query element filter summary
func (m *QueryElementFilterSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDataType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGroup(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var queryElementFilterSummaryTypeDataTypePropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,10,20,40,50]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		queryElementFilterSummaryTypeDataTypePropEnum = append(queryElementFilterSummaryTypeDataTypePropEnum, v)
	}
}

// prop value enum
func (m *QueryElementFilterSummary) validateDataTypeEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, queryElementFilterSummaryTypeDataTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *QueryElementFilterSummary) validateDataType(formats strfmt.Registry) error {
	if swag.IsZero(m.DataType) { // not required
		return nil
	}

	// value enum
	if err := m.validateDataTypeEnum("DataType", "body", m.DataType); err != nil {
		return err
	}

	return nil
}

func (m *QueryElementFilterSummary) validateGroup(formats strfmt.Registry) error {
	if swag.IsZero(m.Group) { // not required
		return nil
	}

	if m.Group != nil {
		if err := m.Group.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("Group")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("Group")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this query element filter summary based on the context it is used
func (m *QueryElementFilterSummary) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateGroup(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *QueryElementFilterSummary) contextValidateGroup(ctx context.Context, formats strfmt.Registry) error {

	if m.Group != nil {

		if swag.IsZero(m.Group) { // not required
			return nil
		}

		if err := m.Group.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("Group")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("Group")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *QueryElementFilterSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *QueryElementFilterSummary) UnmarshalBinary(b []byte) error {
	var res QueryElementFilterSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
