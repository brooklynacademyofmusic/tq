// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LoginCredentials login credentials
//
// swagger:model LoginCredentials
type LoginCredentials struct {

	// allow Html format
	AllowHTMLFormat bool `json:"AllowHtmlFormat,omitempty"`

	// business title
	BusinessTitle string `json:"BusinessTitle,omitempty"`

	// constituent Id
	ConstituentID int32 `json:"ConstituentId,omitempty"`

	// display name
	DisplayName string `json:"DisplayName,omitempty"`

	// email address
	EmailAddress string `json:"EmailAddress,omitempty"`

	// envelope salutation1
	EnvelopeSalutation1 string `json:"EnvelopeSalutation1,omitempty"`

	// envelope salutation2
	EnvelopeSalutation2 string `json:"EnvelopeSalutation2,omitempty"`

	// first name
	FirstName string `json:"FirstName,omitempty"`

	// is temporary
	IsTemporary bool `json:"IsTemporary,omitempty"`

	// last name
	LastName string `json:"LastName,omitempty"`

	// letter salutation
	LetterSalutation string `json:"LetterSalutation,omitempty"`

	// login
	Login string `json:"Login,omitempty"`

	// password token
	PasswordToken string `json:"PasswordToken,omitempty"`
}

// Validate validates this login credentials
func (m *LoginCredentials) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this login credentials based on context it is used
func (m *LoginCredentials) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LoginCredentials) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LoginCredentials) UnmarshalBinary(b []byte) error {
	var res LoginCredentials
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
