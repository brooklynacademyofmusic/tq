// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PaymentHistory payment history
//
// swagger:model PaymentHistory
type PaymentHistory struct {

	// account number
	AccountNumber string `json:"AccountNumber,omitempty"`

	// batch Id
	BatchID int32 `json:"BatchId,omitempty"`

	// card expiration
	// Format: date-time
	CardExpiration *strfmt.DateTime `json:"CardExpiration,omitempty"`

	// check number
	CheckNumber string `json:"CheckNumber,omitempty"`

	// constituent Id
	ConstituentID int32 `json:"ConstituentId,omitempty"`

	// gift certificate number
	GiftCertificateNumber string `json:"GiftCertificateNumber,omitempty"`

	// name on payment
	NameOnPayment string `json:"NameOnPayment,omitempty"`

	// notes
	Notes string `json:"Notes,omitempty"`

	// parent payment number
	ParentPaymentNumber int32 `json:"ParentPaymentNumber,omitempty"`

	// payment amount
	PaymentAmount float64 `json:"PaymentAmount,omitempty"`

	// payment date
	// Format: date-time
	PaymentDate *strfmt.DateTime `json:"PaymentDate,omitempty"`

	// payment Id
	PaymentID int32 `json:"PaymentId,omitempty"`

	// payment method
	PaymentMethod string `json:"PaymentMethod,omitempty"`

	// reference number
	ReferenceNumber string `json:"ReferenceNumber,omitempty"`

	// transaction Id
	TransactionID int32 `json:"TransactionId,omitempty"`
}

// Validate validates this payment history
func (m *PaymentHistory) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCardExpiration(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePaymentDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PaymentHistory) validateCardExpiration(formats strfmt.Registry) error {
	if swag.IsZero(m.CardExpiration) { // not required
		return nil
	}

	if err := validate.FormatOf("CardExpiration", "body", "date-time", m.CardExpiration.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *PaymentHistory) validatePaymentDate(formats strfmt.Registry) error {
	if swag.IsZero(m.PaymentDate) { // not required
		return nil
	}

	if err := validate.FormatOf("PaymentDate", "body", "date-time", m.PaymentDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this payment history based on context it is used
func (m *PaymentHistory) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PaymentHistory) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PaymentHistory) UnmarshalBinary(b []byte) error {
	var res PaymentHistory
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
