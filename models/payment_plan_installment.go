// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PaymentPlanInstallment payment plan installment
//
// swagger:model PaymentPlanInstallment
type PaymentPlanInstallment struct {

	// amount
	Amount float64 `json:"Amount,omitempty"`

	// due date
	// Format: date-time
	DueDate *strfmt.DateTime `json:"DueDate,omitempty"`
}

// Validate validates this payment plan installment
func (m *PaymentPlanInstallment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDueDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PaymentPlanInstallment) validateDueDate(formats strfmt.Registry) error {
	if swag.IsZero(m.DueDate) { // not required
		return nil
	}

	if err := validate.FormatOf("DueDate", "body", "date-time", m.DueDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this payment plan installment based on context it is used
func (m *PaymentPlanInstallment) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PaymentPlanInstallment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PaymentPlanInstallment) UnmarshalBinary(b []byte) error {
	var res PaymentPlanInstallment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
