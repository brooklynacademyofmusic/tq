// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PerformanceCopyRequest performance copy request
//
// swagger:model PerformanceCopyRequest
type PerformanceCopyRequest struct {

	// avail sale indicator
	AvailSaleIndicator bool `json:"AvailSaleIndicator,omitempty"`

	// code
	Code string `json:"Code,omitempty"`

	// copy credits
	CopyCredits bool `json:"CopyCredits,omitempty"`

	// copy notes
	CopyNotes bool `json:"CopyNotes,omitempty"`

	// copy offers
	CopyOffers bool `json:"CopyOffers,omitempty"`

	// copy price events
	CopyPriceEvents bool `json:"CopyPriceEvents,omitempty"`

	// copy price layers
	CopyPriceLayers bool `json:"CopyPriceLayers,omitempty"`

	// date time
	// Format: date-time
	DateTime *strfmt.DateTime `json:"DateTime,omitempty"`

	// default sale date option
	// Enum: [0,1,2,3]
	DefaultSaleDateOption int32 `json:"DefaultSaleDateOption,omitempty"`

	// description
	Description string `json:"Description,omitempty"`

	// mode of sale date option
	// Enum: [0,1,2,3]
	ModeOfSaleDateOption int32 `json:"ModeOfSaleDateOption,omitempty"`

	// price event date option
	// Enum: [0,1]
	PriceEventDateOption int32 `json:"PriceEventDateOption,omitempty"`

	// price type date option
	// Enum: [0,1,2,3]
	PriceTypeDateOption int32 `json:"PriceTypeDateOption,omitempty"`

	// production season Id
	ProductionSeasonID int32 `json:"ProductionSeasonId,omitempty"`

	// publish date option
	// Enum: [0,1,2,3]
	PublishDateOption int32 `json:"PublishDateOption,omitempty"`

	// short name
	ShortName string `json:"ShortName,omitempty"`

	// source performance Id
	SourcePerformanceID int32 `json:"SourcePerformanceId,omitempty"`

	// status Id
	StatusID int32 `json:"StatusId,omitempty"`

	// time slot Id
	TimeSlotID int32 `json:"TimeSlotId,omitempty"`

	// type Id
	TypeID int32 `json:"TypeId,omitempty"`
}

// Validate validates this performance copy request
func (m *PerformanceCopyRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDateTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDefaultSaleDateOption(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateModeOfSaleDateOption(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePriceEventDateOption(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePriceTypeDateOption(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePublishDateOption(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PerformanceCopyRequest) validateDateTime(formats strfmt.Registry) error {
	if swag.IsZero(m.DateTime) { // not required
		return nil
	}

	if err := validate.FormatOf("DateTime", "body", "date-time", m.DateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

var performanceCopyRequestTypeDefaultSaleDateOptionPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,1,2,3]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		performanceCopyRequestTypeDefaultSaleDateOptionPropEnum = append(performanceCopyRequestTypeDefaultSaleDateOptionPropEnum, v)
	}
}

// prop value enum
func (m *PerformanceCopyRequest) validateDefaultSaleDateOptionEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, performanceCopyRequestTypeDefaultSaleDateOptionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PerformanceCopyRequest) validateDefaultSaleDateOption(formats strfmt.Registry) error {
	if swag.IsZero(m.DefaultSaleDateOption) { // not required
		return nil
	}

	// value enum
	if err := m.validateDefaultSaleDateOptionEnum("DefaultSaleDateOption", "body", m.DefaultSaleDateOption); err != nil {
		return err
	}

	return nil
}

var performanceCopyRequestTypeModeOfSaleDateOptionPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,1,2,3]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		performanceCopyRequestTypeModeOfSaleDateOptionPropEnum = append(performanceCopyRequestTypeModeOfSaleDateOptionPropEnum, v)
	}
}

// prop value enum
func (m *PerformanceCopyRequest) validateModeOfSaleDateOptionEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, performanceCopyRequestTypeModeOfSaleDateOptionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PerformanceCopyRequest) validateModeOfSaleDateOption(formats strfmt.Registry) error {
	if swag.IsZero(m.ModeOfSaleDateOption) { // not required
		return nil
	}

	// value enum
	if err := m.validateModeOfSaleDateOptionEnum("ModeOfSaleDateOption", "body", m.ModeOfSaleDateOption); err != nil {
		return err
	}

	return nil
}

var performanceCopyRequestTypePriceEventDateOptionPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,1]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		performanceCopyRequestTypePriceEventDateOptionPropEnum = append(performanceCopyRequestTypePriceEventDateOptionPropEnum, v)
	}
}

// prop value enum
func (m *PerformanceCopyRequest) validatePriceEventDateOptionEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, performanceCopyRequestTypePriceEventDateOptionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PerformanceCopyRequest) validatePriceEventDateOption(formats strfmt.Registry) error {
	if swag.IsZero(m.PriceEventDateOption) { // not required
		return nil
	}

	// value enum
	if err := m.validatePriceEventDateOptionEnum("PriceEventDateOption", "body", m.PriceEventDateOption); err != nil {
		return err
	}

	return nil
}

var performanceCopyRequestTypePriceTypeDateOptionPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,1,2,3]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		performanceCopyRequestTypePriceTypeDateOptionPropEnum = append(performanceCopyRequestTypePriceTypeDateOptionPropEnum, v)
	}
}

// prop value enum
func (m *PerformanceCopyRequest) validatePriceTypeDateOptionEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, performanceCopyRequestTypePriceTypeDateOptionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PerformanceCopyRequest) validatePriceTypeDateOption(formats strfmt.Registry) error {
	if swag.IsZero(m.PriceTypeDateOption) { // not required
		return nil
	}

	// value enum
	if err := m.validatePriceTypeDateOptionEnum("PriceTypeDateOption", "body", m.PriceTypeDateOption); err != nil {
		return err
	}

	return nil
}

var performanceCopyRequestTypePublishDateOptionPropEnum []interface{}

func init() {
	var res []int32
	if err := json.Unmarshal([]byte(`[0,1,2,3]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		performanceCopyRequestTypePublishDateOptionPropEnum = append(performanceCopyRequestTypePublishDateOptionPropEnum, v)
	}
}

// prop value enum
func (m *PerformanceCopyRequest) validatePublishDateOptionEnum(path, location string, value int32) error {
	if err := validate.EnumCase(path, location, value, performanceCopyRequestTypePublishDateOptionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *PerformanceCopyRequest) validatePublishDateOption(formats strfmt.Registry) error {
	if swag.IsZero(m.PublishDateOption) { // not required
		return nil
	}

	// value enum
	if err := m.validatePublishDateOptionEnum("PublishDateOption", "body", m.PublishDateOption); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this performance copy request based on context it is used
func (m *PerformanceCopyRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PerformanceCopyRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PerformanceCopyRequest) UnmarshalBinary(b []byte) error {
	var res PerformanceCopyRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
