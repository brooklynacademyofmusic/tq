// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateSepaAccountRequest create sepa account request
//
// swagger:model CreateSepaAccountRequest
type CreateSepaAccountRequest struct {

	// account number
	AccountNumber string `json:"AccountNumber,omitempty"`

	// bank identifier code
	BankIdentifierCode string `json:"BankIdentifierCode,omitempty"`

	// constituent Id
	ConstituentID int32 `json:"ConstituentId,omitempty"`

	// inactive
	Inactive bool `json:"Inactive,omitempty"`

	// mandate number
	MandateNumber string `json:"MandateNumber,omitempty"`

	// mandate type
	MandateType int32 `json:"MandateType,omitempty"`

	// name
	Name string `json:"Name,omitempty"`

	// signature date
	// Format: date-time
	SignatureDate strfmt.DateTime `json:"SignatureDate,omitempty"`
}

// Validate validates this create sepa account request
func (m *CreateSepaAccountRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSignatureDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateSepaAccountRequest) validateSignatureDate(formats strfmt.Registry) error {
	if swag.IsZero(m.SignatureDate) { // not required
		return nil
	}

	if err := validate.FormatOf("SignatureDate", "body", "date-time", m.SignatureDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create sepa account request based on context it is used
func (m *CreateSepaAccountRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateSepaAccountRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateSepaAccountRequest) UnmarshalBinary(b []byte) error {
	var res CreateSepaAccountRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
