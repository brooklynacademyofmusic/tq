// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TicketElement ticket element
//
// swagger:model TicketElement
type TicketElement struct {

	// barcode expand
	BarcodeExpand int32 `json:"BarcodeExpand,omitempty"`

	// barcode height
	BarcodeHeight int32 `json:"BarcodeHeight,omitempty"`

	// barcode image
	// Format: byte
	BarcodeImage strfmt.Base64 `json:"BarcodeImage,omitempty"`

	// barcode ind
	BarcodeInd string `json:"BarcodeInd,omitempty"`

	// barcode interp ind
	BarcodeInterpInd string `json:"BarcodeInterpInd,omitempty"`

	// barcode type no
	BarcodeTypeNo int32 `json:"BarcodeTypeNo,omitempty"`

	// box x
	BoxX int32 `json:"BoxX,omitempty"`

	// box y
	BoxY int32 `json:"BoxY,omitempty"`

	// composite ticket no
	CompositeTicketNo int32 `json:"CompositeTicketNo,omitempty"`

	// data len
	DataLen int32 `json:"DataLen,omitempty"`

	// data type
	DataType string `json:"DataType,omitempty"`

	// description
	Description string `json:"Description,omitempty"`

	// design no
	DesignNo int32 `json:"DesignNo,omitempty"`

	// ele height
	EleHeight int32 `json:"EleHeight,omitempty"`

	// ele no
	EleNo int32 `json:"EleNo,omitempty"`

	// ele sl no
	EleSlNo int32 `json:"EleSlNo,omitempty"`

	// ele type
	EleType string `json:"EleType,omitempty"`

	// ele width
	EleWidth int32 `json:"EleWidth,omitempty"`

	// ele x1
	EleX1 int32 `json:"EleX1,omitempty"`

	// ele y1
	EleY1 int32 `json:"EleY1,omitempty"`

	// element type
	ElementType string `json:"ElementType,omitempty"`

	// font no
	FontNo int32 `json:"FontNo,omitempty"`

	// font rotation
	FontRotation string `json:"FontRotation,omitempty"`

	// font x
	FontX int32 `json:"FontX,omitempty"`

	// font y
	FontY int32 `json:"FontY,omitempty"`

	// ident Id
	IdentID int32 `json:"IdentId,omitempty"`

	// justify text
	JustifyText string `json:"JustifyText,omitempty"`

	// line height
	LineHeight int32 `json:"LineHeight,omitempty"`

	// line thick
	LineThick int32 `json:"LineThick,omitempty"`

	// line width
	LineWidth int32 `json:"LineWidth,omitempty"`

	// mask
	Mask string `json:"Mask,omitempty"`

	// neg print ind
	NegPrintInd string `json:"NegPrintInd,omitempty"`

	// order no
	OrderNo int32 `json:"OrderNo,omitempty"`

	// qr scaling
	QrScaling int32 `json:"QrScaling,omitempty"`

	// rect height
	RectHeight int32 `json:"RectHeight,omitempty"`

	// rect width
	RectWidth int32 `json:"RectWidth,omitempty"`

	// reprint ind
	ReprintInd string `json:"ReprintInd,omitempty"`

	// sli no
	SliNo int32 `json:"SliNo,omitempty"`

	// text height
	TextHeight int32 `json:"TextHeight,omitempty"`

	// text width
	TextWidth int32 `json:"TextWidth,omitempty"`

	// val
	Val string `json:"Val,omitempty"`
}

// Validate validates this ticket element
func (m *TicketElement) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ticket element based on context it is used
func (m *TicketElement) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TicketElement) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TicketElement) UnmarshalBinary(b []byte) error {
	var res TicketElement
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
