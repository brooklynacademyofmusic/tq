// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ConstituentDevelopmentInfo constituent development info
//
// swagger:model ConstituentDevelopmentInfo
type ConstituentDevelopmentInfo struct {

	// constituencies
	Constituencies string `json:"Constituencies,omitempty"`

	// current status
	CurrentStatus string `json:"CurrentStatus,omitempty"`

	// Id
	ID int32 `json:"Id,omitempty"`

	// last contribution amount
	LastContributionAmount float64 `json:"LastContributionAmount,omitempty"`

	// last contribution date
	// Format: date-time
	LastContributionDate *strfmt.DateTime `json:"LastContributionDate,omitempty"`

	// last contribution fund
	LastContributionFund string `json:"LastContributionFund,omitempty"`

	// last contribution received
	LastContributionReceived float64 `json:"LastContributionReceived,omitempty"`

	// last year contribution
	LastYearContribution float64 `json:"LastYearContribution,omitempty"`

	// membership expiration
	// Format: date-time
	MembershipExpiration *strfmt.DateTime `json:"MembershipExpiration,omitempty"`

	// membership level
	MembershipLevel string `json:"MembershipLevel,omitempty"`
}

// Validate validates this constituent development info
func (m *ConstituentDevelopmentInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastContributionDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMembershipExpiration(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConstituentDevelopmentInfo) validateLastContributionDate(formats strfmt.Registry) error {
	if swag.IsZero(m.LastContributionDate) { // not required
		return nil
	}

	if err := validate.FormatOf("LastContributionDate", "body", "date-time", m.LastContributionDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ConstituentDevelopmentInfo) validateMembershipExpiration(formats strfmt.Registry) error {
	if swag.IsZero(m.MembershipExpiration) { // not required
		return nil
	}

	if err := validate.FormatOf("MembershipExpiration", "body", "date-time", m.MembershipExpiration.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this constituent development info based on context it is used
func (m *ConstituentDevelopmentInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ConstituentDevelopmentInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConstituentDevelopmentInfo) UnmarshalBinary(b []byte) error {
	var res ConstituentDevelopmentInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
