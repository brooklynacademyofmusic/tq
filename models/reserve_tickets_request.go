// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ReserveTicketsRequest reserve tickets request
//
// swagger:model ReserveTicketsRequest
type ReserveTicketsRequest struct {

	// number of seats
	NumberOfSeats int32 `json:"NumberOfSeats,omitempty"`

	// performance Id
	PerformanceID int32 `json:"PerformanceId,omitempty"`

	// price type
	PriceType string `json:"PriceType,omitempty"`

	// price type reason
	PriceTypeReason string `json:"PriceTypeReason,omitempty"`

	// requested seats
	RequestedSeats string `json:"RequestedSeats,omitempty"`

	// special requests
	SpecialRequests string `json:"SpecialRequests,omitempty"`

	// unseated
	Unseated bool `json:"Unseated,omitempty"`

	// zone Id
	ZoneID int32 `json:"ZoneId,omitempty"`
}

// Validate validates this reserve tickets request
func (m *ReserveTicketsRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this reserve tickets request based on context it is used
func (m *ReserveTicketsRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ReserveTicketsRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReserveTicketsRequest) UnmarshalBinary(b []byte) error {
	var res ReserveTicketsRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
