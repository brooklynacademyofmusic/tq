// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OrdersForDeliveryResponse orders for delivery response
//
// swagger:model OrdersForDeliveryResponse
type OrdersForDeliveryResponse struct {

	// constituent Id
	ConstituentID int32 `json:"ConstituentId,omitempty"`

	// delivery method
	DeliveryMethod int32 `json:"DeliveryMethod,omitempty"`

	// electronic address Id
	ElectronicAddressID int32 `json:"ElectronicAddressId,omitempty"`

	// email address
	EmailAddress string `json:"EmailAddress,omitempty"`

	// mode of sale
	ModeOfSale int32 `json:"ModeOfSale,omitempty"`

	// order date time
	// Format: date-time
	OrderDateTime strfmt.DateTime `json:"OrderDateTime,omitempty"`

	// order Id
	OrderID int32 `json:"OrderId,omitempty"`
}

// Validate validates this orders for delivery response
func (m *OrdersForDeliveryResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOrderDateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OrdersForDeliveryResponse) validateOrderDateTime(formats strfmt.Registry) error {
	if swag.IsZero(m.OrderDateTime) { // not required
		return nil
	}

	if err := validate.FormatOf("OrderDateTime", "body", "date-time", m.OrderDateTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this orders for delivery response based on context it is used
func (m *OrdersForDeliveryResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OrdersForDeliveryResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OrdersForDeliveryResponse) UnmarshalBinary(b []byte) error {
	var res OrdersForDeliveryResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
