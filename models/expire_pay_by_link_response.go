// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ExpirePayByLinkResponse expire pay by link response
//
// swagger:model ExpirePayByLinkResponse
type ExpirePayByLinkResponse struct {

	// expires at
	// Format: date-time
	ExpiresAt *strfmt.DateTime `json:"ExpiresAt,omitempty"`

	// Id
	ID string `json:"Id,omitempty"`

	// is successful
	IsSuccessful bool `json:"IsSuccessful,omitempty"`

	// reference
	Reference string `json:"Reference,omitempty"`

	// status
	Status string `json:"Status,omitempty"`

	// Url
	URL string `json:"Url,omitempty"`
}

// Validate validates this expire pay by link response
func (m *ExpirePayByLinkResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExpiresAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExpirePayByLinkResponse) validateExpiresAt(formats strfmt.Registry) error {
	if swag.IsZero(m.ExpiresAt) { // not required
		return nil
	}

	if err := validate.FormatOf("ExpiresAt", "body", "date-time", m.ExpiresAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this expire pay by link response based on context it is used
func (m *ExpirePayByLinkResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ExpirePayByLinkResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExpirePayByLinkResponse) UnmarshalBinary(b []byte) error {
	var res ExpirePayByLinkResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
