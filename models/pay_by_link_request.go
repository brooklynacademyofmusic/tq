// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PayByLinkRequest pay by link request
//
// swagger:model PayByLinkRequest
type PayByLinkRequest struct {

	// allowed payment methods
	AllowedPaymentMethods []string `json:"AllowedPaymentMethods"`

	// amount
	Amount float64 `json:"Amount,omitempty"`

	// constituent Id
	ConstituentID int32 `json:"ConstituentId,omitempty"`

	// country code
	CountryCode string `json:"CountryCode,omitempty"`

	// currency
	Currency string `json:"Currency,omitempty"`

	// description
	Description string `json:"Description,omitempty"`

	// is e commerce
	IsECommerce bool `json:"IsECommerce,omitempty"`

	// link expiry
	// Format: date-time
	LinkExpiry strfmt.DateTime `json:"LinkExpiry,omitempty"`

	// locale
	Locale string `json:"Locale,omitempty"`

	// merchant Id
	MerchantID string `json:"MerchantId,omitempty"`

	// payment Id
	PaymentID int32 `json:"PaymentId,omitempty"`

	// store account
	StoreAccount bool `json:"StoreAccount,omitempty"`

	// transaction origin
	TransactionOrigin string `json:"TransactionOrigin,omitempty"`
}

// Validate validates this pay by link request
func (m *PayByLinkRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLinkExpiry(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PayByLinkRequest) validateLinkExpiry(formats strfmt.Registry) error {
	if swag.IsZero(m.LinkExpiry) { // not required
		return nil
	}

	if err := validate.FormatOf("LinkExpiry", "body", "date-time", m.LinkExpiry.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this pay by link request based on context it is used
func (m *PayByLinkRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PayByLinkRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PayByLinkRequest) UnmarshalBinary(b []byte) error {
	var res PayByLinkRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
