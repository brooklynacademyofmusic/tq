// Code generated by go-swagger; DO NOT EDIT.

package p_o_s_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// NewConstituentsConvertGroupToIndividualParams creates a new ConstituentsConvertGroupToIndividualParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewConstituentsConvertGroupToIndividualParams() *ConstituentsConvertGroupToIndividualParams {
	return &ConstituentsConvertGroupToIndividualParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewConstituentsConvertGroupToIndividualParamsWithTimeout creates a new ConstituentsConvertGroupToIndividualParams object
// with the ability to set a timeout on a request.
func NewConstituentsConvertGroupToIndividualParamsWithTimeout(timeout time.Duration) *ConstituentsConvertGroupToIndividualParams {
	return &ConstituentsConvertGroupToIndividualParams{
		timeout: timeout,
	}
}

// NewConstituentsConvertGroupToIndividualParamsWithContext creates a new ConstituentsConvertGroupToIndividualParams object
// with the ability to set a context for a request.
func NewConstituentsConvertGroupToIndividualParamsWithContext(ctx context.Context) *ConstituentsConvertGroupToIndividualParams {
	return &ConstituentsConvertGroupToIndividualParams{
		Context: ctx,
	}
}

// NewConstituentsConvertGroupToIndividualParamsWithHTTPClient creates a new ConstituentsConvertGroupToIndividualParams object
// with the ability to set a custom HTTPClient for a request.
func NewConstituentsConvertGroupToIndividualParamsWithHTTPClient(client *http.Client) *ConstituentsConvertGroupToIndividualParams {
	return &ConstituentsConvertGroupToIndividualParams{
		HTTPClient: client,
	}
}

/*
ConstituentsConvertGroupToIndividualParams contains all the parameters to send to the API endpoint

	for the constituents convert group to individual operation.

	Typically these are written to a http.Request.
*/
type ConstituentsConvertGroupToIndividualParams struct {

	// ConstituentID.
	ConstituentID string

	// Request.
	Request *models.GroupToIndividualRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the constituents convert group to individual params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ConstituentsConvertGroupToIndividualParams) WithDefaults() *ConstituentsConvertGroupToIndividualParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the constituents convert group to individual params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ConstituentsConvertGroupToIndividualParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the constituents convert group to individual params
func (o *ConstituentsConvertGroupToIndividualParams) WithTimeout(timeout time.Duration) *ConstituentsConvertGroupToIndividualParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the constituents convert group to individual params
func (o *ConstituentsConvertGroupToIndividualParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the constituents convert group to individual params
func (o *ConstituentsConvertGroupToIndividualParams) WithContext(ctx context.Context) *ConstituentsConvertGroupToIndividualParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the constituents convert group to individual params
func (o *ConstituentsConvertGroupToIndividualParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the constituents convert group to individual params
func (o *ConstituentsConvertGroupToIndividualParams) WithHTTPClient(client *http.Client) *ConstituentsConvertGroupToIndividualParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the constituents convert group to individual params
func (o *ConstituentsConvertGroupToIndividualParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConstituentID adds the constituentID to the constituents convert group to individual params
func (o *ConstituentsConvertGroupToIndividualParams) WithConstituentID(constituentID string) *ConstituentsConvertGroupToIndividualParams {
	o.SetConstituentID(constituentID)
	return o
}

// SetConstituentID adds the constituentId to the constituents convert group to individual params
func (o *ConstituentsConvertGroupToIndividualParams) SetConstituentID(constituentID string) {
	o.ConstituentID = constituentID
}

// WithRequest adds the request to the constituents convert group to individual params
func (o *ConstituentsConvertGroupToIndividualParams) WithRequest(request *models.GroupToIndividualRequest) *ConstituentsConvertGroupToIndividualParams {
	o.SetRequest(request)
	return o
}

// SetRequest adds the request to the constituents convert group to individual params
func (o *ConstituentsConvertGroupToIndividualParams) SetRequest(request *models.GroupToIndividualRequest) {
	o.Request = request
}

// WriteToRequest writes these params to a swagger request
func (o *ConstituentsConvertGroupToIndividualParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param constituentId
	if err := r.SetPathParam("constituentId", o.ConstituentID); err != nil {
		return err
	}
	if o.Request != nil {
		if err := r.SetBodyParam(o.Request); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
