// Code generated by go-swagger; DO NOT EDIT.

package p_o_s_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// OrdersPrintHTMLTicketsReader is a Reader for the OrdersPrintHTMLTickets structure.
type OrdersPrintHTMLTicketsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrdersPrintHTMLTicketsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrdersPrintHTMLTicketsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[POST /TXN/Orders/{orderId}/PrintHtmlTickets] Orders_PrintHtmlTickets", response, response.Code())
	}
}

// NewOrdersPrintHTMLTicketsOK creates a OrdersPrintHTMLTicketsOK with default headers values
func NewOrdersPrintHTMLTicketsOK() *OrdersPrintHTMLTicketsOK {
	return &OrdersPrintHTMLTicketsOK{}
}

/*
OrdersPrintHTMLTicketsOK describes a response with status code 200, with default header values.

OK
*/
type OrdersPrintHTMLTicketsOK struct {
	Payload *models.PrintOrderHTMLTicketsResponse
}

// IsSuccess returns true when this orders print Html tickets o k response has a 2xx status code
func (o *OrdersPrintHTMLTicketsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this orders print Html tickets o k response has a 3xx status code
func (o *OrdersPrintHTMLTicketsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this orders print Html tickets o k response has a 4xx status code
func (o *OrdersPrintHTMLTicketsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this orders print Html tickets o k response has a 5xx status code
func (o *OrdersPrintHTMLTicketsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this orders print Html tickets o k response a status code equal to that given
func (o *OrdersPrintHTMLTicketsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the orders print Html tickets o k response
func (o *OrdersPrintHTMLTicketsOK) Code() int {
	return 200
}

func (o *OrdersPrintHTMLTicketsOK) Error() string {
	return fmt.Sprintf("[POST /TXN/Orders/{orderId}/PrintHtmlTickets][%d] ordersPrintHtmlTicketsOK  %+v", 200, o.Payload)
}

func (o *OrdersPrintHTMLTicketsOK) String() string {
	return fmt.Sprintf("[POST /TXN/Orders/{orderId}/PrintHtmlTickets][%d] ordersPrintHtmlTicketsOK  %+v", 200, o.Payload)
}

func (o *OrdersPrintHTMLTicketsOK) GetPayload() *models.PrintOrderHTMLTicketsResponse {
	return o.Payload
}

func (o *OrdersPrintHTMLTicketsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PrintOrderHTMLTicketsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
