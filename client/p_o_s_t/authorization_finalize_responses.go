// Code generated by go-swagger; DO NOT EDIT.

package p_o_s_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// AuthorizationFinalizeReader is a Reader for the AuthorizationFinalize structure.
type AuthorizationFinalizeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthorizationFinalizeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthorizationFinalizeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAuthorizationFinalizeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAuthorizationFinalizeOK creates a AuthorizationFinalizeOK with default headers values
func NewAuthorizationFinalizeOK() *AuthorizationFinalizeOK {
	return &AuthorizationFinalizeOK{}
}

/*
AuthorizationFinalizeOK describes a response with status code 200, with default header values.

OK
*/
type AuthorizationFinalizeOK struct {
	Payload *models.AuthorizationResponse
}

// IsSuccess returns true when this authorization finalize o k response has a 2xx status code
func (o *AuthorizationFinalizeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this authorization finalize o k response has a 3xx status code
func (o *AuthorizationFinalizeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this authorization finalize o k response has a 4xx status code
func (o *AuthorizationFinalizeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this authorization finalize o k response has a 5xx status code
func (o *AuthorizationFinalizeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this authorization finalize o k response a status code equal to that given
func (o *AuthorizationFinalizeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the authorization finalize o k response
func (o *AuthorizationFinalizeOK) Code() int {
	return 200
}

func (o *AuthorizationFinalizeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /PaymentGateway/Authorization/Finalize][%d] authorizationFinalizeOK %s", 200, payload)
}

func (o *AuthorizationFinalizeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /PaymentGateway/Authorization/Finalize][%d] authorizationFinalizeOK %s", 200, payload)
}

func (o *AuthorizationFinalizeOK) GetPayload() *models.AuthorizationResponse {
	return o.Payload
}

func (o *AuthorizationFinalizeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorizationFinalizeDefault creates a AuthorizationFinalizeDefault with default headers values
func NewAuthorizationFinalizeDefault(code int) *AuthorizationFinalizeDefault {
	return &AuthorizationFinalizeDefault{
		_statusCode: code,
	}
}

/*
AuthorizationFinalizeDefault describes a response with status code -1, with default header values.

Error
*/
type AuthorizationFinalizeDefault struct {
	_statusCode int

	Payload *models.ErrorMessage
}

// IsSuccess returns true when this authorization finalize default response has a 2xx status code
func (o *AuthorizationFinalizeDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this authorization finalize default response has a 3xx status code
func (o *AuthorizationFinalizeDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this authorization finalize default response has a 4xx status code
func (o *AuthorizationFinalizeDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this authorization finalize default response has a 5xx status code
func (o *AuthorizationFinalizeDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this authorization finalize default response a status code equal to that given
func (o *AuthorizationFinalizeDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the authorization finalize default response
func (o *AuthorizationFinalizeDefault) Code() int {
	return o._statusCode
}

func (o *AuthorizationFinalizeDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /PaymentGateway/Authorization/Finalize][%d] Authorization_Finalize default %s", o._statusCode, payload)
}

func (o *AuthorizationFinalizeDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /PaymentGateway/Authorization/Finalize][%d] Authorization_Finalize default %s", o._statusCode, payload)
}

func (o *AuthorizationFinalizeDefault) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *AuthorizationFinalizeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
