// Code generated by go-swagger; DO NOT EDIT.

package p_o_s_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// CartAuthorizeReader is a Reader for the CartAuthorize structure.
type CartAuthorizeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CartAuthorizeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCartAuthorizeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCartAuthorizeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCartAuthorizeOK creates a CartAuthorizeOK with default headers values
func NewCartAuthorizeOK() *CartAuthorizeOK {
	return &CartAuthorizeOK{}
}

/*
CartAuthorizeOK describes a response with status code 200, with default header values.

OK
*/
type CartAuthorizeOK struct {
	Payload *models.WebEmvAuthorizationResponse
}

// IsSuccess returns true when this cart authorize o k response has a 2xx status code
func (o *CartAuthorizeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cart authorize o k response has a 3xx status code
func (o *CartAuthorizeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cart authorize o k response has a 4xx status code
func (o *CartAuthorizeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cart authorize o k response has a 5xx status code
func (o *CartAuthorizeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cart authorize o k response a status code equal to that given
func (o *CartAuthorizeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cart authorize o k response
func (o *CartAuthorizeOK) Code() int {
	return 200
}

func (o *CartAuthorizeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /Web/Cart/{sessionKey}/Payments/EMV/Authorize][%d] cartAuthorizeOK %s", 200, payload)
}

func (o *CartAuthorizeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /Web/Cart/{sessionKey}/Payments/EMV/Authorize][%d] cartAuthorizeOK %s", 200, payload)
}

func (o *CartAuthorizeOK) GetPayload() *models.WebEmvAuthorizationResponse {
	return o.Payload
}

func (o *CartAuthorizeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WebEmvAuthorizationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCartAuthorizeDefault creates a CartAuthorizeDefault with default headers values
func NewCartAuthorizeDefault(code int) *CartAuthorizeDefault {
	return &CartAuthorizeDefault{
		_statusCode: code,
	}
}

/*
CartAuthorizeDefault describes a response with status code -1, with default header values.

Error
*/
type CartAuthorizeDefault struct {
	_statusCode int

	Payload *models.ErrorMessage
}

// IsSuccess returns true when this cart authorize default response has a 2xx status code
func (o *CartAuthorizeDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this cart authorize default response has a 3xx status code
func (o *CartAuthorizeDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this cart authorize default response has a 4xx status code
func (o *CartAuthorizeDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this cart authorize default response has a 5xx status code
func (o *CartAuthorizeDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this cart authorize default response a status code equal to that given
func (o *CartAuthorizeDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the cart authorize default response
func (o *CartAuthorizeDefault) Code() int {
	return o._statusCode
}

func (o *CartAuthorizeDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /Web/Cart/{sessionKey}/Payments/EMV/Authorize][%d] Cart_Authorize default %s", o._statusCode, payload)
}

func (o *CartAuthorizeDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /Web/Cart/{sessionKey}/Payments/EMV/Authorize][%d] Cart_Authorize default %s", o._statusCode, payload)
}

func (o *CartAuthorizeDefault) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CartAuthorizeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
