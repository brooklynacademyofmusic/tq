// Code generated by go-swagger; DO NOT EDIT.

package p_o_s_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// CartAddGiftCertificateReader is a Reader for the CartAddGiftCertificate structure.
type CartAddGiftCertificateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CartAddGiftCertificateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCartAddGiftCertificateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCartAddGiftCertificateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCartAddGiftCertificateOK creates a CartAddGiftCertificateOK with default headers values
func NewCartAddGiftCertificateOK() *CartAddGiftCertificateOK {
	return &CartAddGiftCertificateOK{}
}

/*
CartAddGiftCertificateOK describes a response with status code 200, with default header values.

OK
*/
type CartAddGiftCertificateOK struct {
	Payload *models.CartProductResponse
}

// IsSuccess returns true when this cart add gift certificate o k response has a 2xx status code
func (o *CartAddGiftCertificateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cart add gift certificate o k response has a 3xx status code
func (o *CartAddGiftCertificateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cart add gift certificate o k response has a 4xx status code
func (o *CartAddGiftCertificateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cart add gift certificate o k response has a 5xx status code
func (o *CartAddGiftCertificateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cart add gift certificate o k response a status code equal to that given
func (o *CartAddGiftCertificateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cart add gift certificate o k response
func (o *CartAddGiftCertificateOK) Code() int {
	return 200
}

func (o *CartAddGiftCertificateOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /Web/Cart/{sessionKey}/GiftCertificates][%d] cartAddGiftCertificateOK %s", 200, payload)
}

func (o *CartAddGiftCertificateOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /Web/Cart/{sessionKey}/GiftCertificates][%d] cartAddGiftCertificateOK %s", 200, payload)
}

func (o *CartAddGiftCertificateOK) GetPayload() *models.CartProductResponse {
	return o.Payload
}

func (o *CartAddGiftCertificateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CartProductResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCartAddGiftCertificateDefault creates a CartAddGiftCertificateDefault with default headers values
func NewCartAddGiftCertificateDefault(code int) *CartAddGiftCertificateDefault {
	return &CartAddGiftCertificateDefault{
		_statusCode: code,
	}
}

/*
CartAddGiftCertificateDefault describes a response with status code -1, with default header values.

Error
*/
type CartAddGiftCertificateDefault struct {
	_statusCode int

	Payload *models.ErrorMessage
}

// IsSuccess returns true when this cart add gift certificate default response has a 2xx status code
func (o *CartAddGiftCertificateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this cart add gift certificate default response has a 3xx status code
func (o *CartAddGiftCertificateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this cart add gift certificate default response has a 4xx status code
func (o *CartAddGiftCertificateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this cart add gift certificate default response has a 5xx status code
func (o *CartAddGiftCertificateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this cart add gift certificate default response a status code equal to that given
func (o *CartAddGiftCertificateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the cart add gift certificate default response
func (o *CartAddGiftCertificateDefault) Code() int {
	return o._statusCode
}

func (o *CartAddGiftCertificateDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /Web/Cart/{sessionKey}/GiftCertificates][%d] Cart_AddGiftCertificate default %s", o._statusCode, payload)
}

func (o *CartAddGiftCertificateDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /Web/Cart/{sessionKey}/GiftCertificates][%d] Cart_AddGiftCertificate default %s", o._statusCode, payload)
}

func (o *CartAddGiftCertificateDefault) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CartAddGiftCertificateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
