// Code generated by go-swagger; DO NOT EDIT.

package p_o_s_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// HoldCodesCreateReader is a Reader for the HoldCodesCreate structure.
type HoldCodesCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HoldCodesCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHoldCodesCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[POST /TXN/HoldCodes] HoldCodes_Create", response, response.Code())
	}
}

// NewHoldCodesCreateOK creates a HoldCodesCreateOK with default headers values
func NewHoldCodesCreateOK() *HoldCodesCreateOK {
	return &HoldCodesCreateOK{}
}

/*
HoldCodesCreateOK describes a response with status code 200, with default header values.

OK
*/
type HoldCodesCreateOK struct {
	Payload *models.HoldCode
}

// IsSuccess returns true when this hold codes create o k response has a 2xx status code
func (o *HoldCodesCreateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this hold codes create o k response has a 3xx status code
func (o *HoldCodesCreateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this hold codes create o k response has a 4xx status code
func (o *HoldCodesCreateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this hold codes create o k response has a 5xx status code
func (o *HoldCodesCreateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this hold codes create o k response a status code equal to that given
func (o *HoldCodesCreateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the hold codes create o k response
func (o *HoldCodesCreateOK) Code() int {
	return 200
}

func (o *HoldCodesCreateOK) Error() string {
	return fmt.Sprintf("[POST /TXN/HoldCodes][%d] holdCodesCreateOK  %+v", 200, o.Payload)
}

func (o *HoldCodesCreateOK) String() string {
	return fmt.Sprintf("[POST /TXN/HoldCodes][%d] holdCodesCreateOK  %+v", 200, o.Payload)
}

func (o *HoldCodesCreateOK) GetPayload() *models.HoldCode {
	return o.Payload
}

func (o *HoldCodesCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HoldCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
