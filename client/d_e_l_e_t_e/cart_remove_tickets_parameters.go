// Code generated by go-swagger; DO NOT EDIT.

package d_e_l_e_t_e

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCartRemoveTicketsParams creates a new CartRemoveTicketsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCartRemoveTicketsParams() *CartRemoveTicketsParams {
	return &CartRemoveTicketsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCartRemoveTicketsParamsWithTimeout creates a new CartRemoveTicketsParams object
// with the ability to set a timeout on a request.
func NewCartRemoveTicketsParamsWithTimeout(timeout time.Duration) *CartRemoveTicketsParams {
	return &CartRemoveTicketsParams{
		timeout: timeout,
	}
}

// NewCartRemoveTicketsParamsWithContext creates a new CartRemoveTicketsParams object
// with the ability to set a context for a request.
func NewCartRemoveTicketsParamsWithContext(ctx context.Context) *CartRemoveTicketsParams {
	return &CartRemoveTicketsParams{
		Context: ctx,
	}
}

// NewCartRemoveTicketsParamsWithHTTPClient creates a new CartRemoveTicketsParams object
// with the ability to set a custom HTTPClient for a request.
func NewCartRemoveTicketsParamsWithHTTPClient(client *http.Client) *CartRemoveTicketsParams {
	return &CartRemoveTicketsParams{
		HTTPClient: client,
	}
}

/*
CartRemoveTicketsParams contains all the parameters to send to the API endpoint

	for the cart remove tickets operation.

	Typically these are written to a http.Request.
*/
type CartRemoveTicketsParams struct {

	/* LineItemID.

	   The lineitem of the performance to release
	*/
	LineItemID string

	/* PerformanceID.

	   A performance Id from the cart
	*/
	PerformanceID string

	// SessionKey.
	SessionKey string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the cart remove tickets params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CartRemoveTicketsParams) WithDefaults() *CartRemoveTicketsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the cart remove tickets params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CartRemoveTicketsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the cart remove tickets params
func (o *CartRemoveTicketsParams) WithTimeout(timeout time.Duration) *CartRemoveTicketsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the cart remove tickets params
func (o *CartRemoveTicketsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the cart remove tickets params
func (o *CartRemoveTicketsParams) WithContext(ctx context.Context) *CartRemoveTicketsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the cart remove tickets params
func (o *CartRemoveTicketsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the cart remove tickets params
func (o *CartRemoveTicketsParams) WithHTTPClient(client *http.Client) *CartRemoveTicketsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the cart remove tickets params
func (o *CartRemoveTicketsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLineItemID adds the lineItemID to the cart remove tickets params
func (o *CartRemoveTicketsParams) WithLineItemID(lineItemID string) *CartRemoveTicketsParams {
	o.SetLineItemID(lineItemID)
	return o
}

// SetLineItemID adds the lineItemId to the cart remove tickets params
func (o *CartRemoveTicketsParams) SetLineItemID(lineItemID string) {
	o.LineItemID = lineItemID
}

// WithPerformanceID adds the performanceID to the cart remove tickets params
func (o *CartRemoveTicketsParams) WithPerformanceID(performanceID string) *CartRemoveTicketsParams {
	o.SetPerformanceID(performanceID)
	return o
}

// SetPerformanceID adds the performanceId to the cart remove tickets params
func (o *CartRemoveTicketsParams) SetPerformanceID(performanceID string) {
	o.PerformanceID = performanceID
}

// WithSessionKey adds the sessionKey to the cart remove tickets params
func (o *CartRemoveTicketsParams) WithSessionKey(sessionKey string) *CartRemoveTicketsParams {
	o.SetSessionKey(sessionKey)
	return o
}

// SetSessionKey adds the sessionKey to the cart remove tickets params
func (o *CartRemoveTicketsParams) SetSessionKey(sessionKey string) {
	o.SessionKey = sessionKey
}

// WriteToRequest writes these params to a swagger request
func (o *CartRemoveTicketsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param lineItemId
	if err := r.SetPathParam("lineItemId", o.LineItemID); err != nil {
		return err
	}

	// path param performanceId
	if err := r.SetPathParam("performanceId", o.PerformanceID); err != nil {
		return err
	}

	// path param sessionKey
	if err := r.SetPathParam("sessionKey", o.SessionKey); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
