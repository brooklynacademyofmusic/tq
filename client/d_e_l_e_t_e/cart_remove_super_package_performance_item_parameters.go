// Code generated by go-swagger; DO NOT EDIT.

package d_e_l_e_t_e

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCartRemoveSuperPackagePerformanceItemParams creates a new CartRemoveSuperPackagePerformanceItemParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCartRemoveSuperPackagePerformanceItemParams() *CartRemoveSuperPackagePerformanceItemParams {
	return &CartRemoveSuperPackagePerformanceItemParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCartRemoveSuperPackagePerformanceItemParamsWithTimeout creates a new CartRemoveSuperPackagePerformanceItemParams object
// with the ability to set a timeout on a request.
func NewCartRemoveSuperPackagePerformanceItemParamsWithTimeout(timeout time.Duration) *CartRemoveSuperPackagePerformanceItemParams {
	return &CartRemoveSuperPackagePerformanceItemParams{
		timeout: timeout,
	}
}

// NewCartRemoveSuperPackagePerformanceItemParamsWithContext creates a new CartRemoveSuperPackagePerformanceItemParams object
// with the ability to set a context for a request.
func NewCartRemoveSuperPackagePerformanceItemParamsWithContext(ctx context.Context) *CartRemoveSuperPackagePerformanceItemParams {
	return &CartRemoveSuperPackagePerformanceItemParams{
		Context: ctx,
	}
}

// NewCartRemoveSuperPackagePerformanceItemParamsWithHTTPClient creates a new CartRemoveSuperPackagePerformanceItemParams object
// with the ability to set a custom HTTPClient for a request.
func NewCartRemoveSuperPackagePerformanceItemParamsWithHTTPClient(client *http.Client) *CartRemoveSuperPackagePerformanceItemParams {
	return &CartRemoveSuperPackagePerformanceItemParams{
		HTTPClient: client,
	}
}

/*
CartRemoveSuperPackagePerformanceItemParams contains all the parameters to send to the API endpoint

	for the cart remove super package performance item operation.

	Typically these are written to a http.Request.
*/
type CartRemoveSuperPackagePerformanceItemParams struct {

	/* PerformanceID.

	   PerformanceId ID of the performance to remove
	*/
	PerformanceID string

	/* PerformanceLineItemID.

	   Lineitem ID of the performance line in the package to remove
	*/
	PerformanceLineItemID string

	// SessionKey.
	SessionKey string

	/* SubPackageID.

	   ID of the sub package to remove the performance from
	*/
	SubPackageID string

	/* SuperPackageLineItemID.

	   Lineitem ID of the super package to remove the performance from
	*/
	SuperPackageLineItemID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the cart remove super package performance item params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CartRemoveSuperPackagePerformanceItemParams) WithDefaults() *CartRemoveSuperPackagePerformanceItemParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the cart remove super package performance item params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CartRemoveSuperPackagePerformanceItemParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the cart remove super package performance item params
func (o *CartRemoveSuperPackagePerformanceItemParams) WithTimeout(timeout time.Duration) *CartRemoveSuperPackagePerformanceItemParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the cart remove super package performance item params
func (o *CartRemoveSuperPackagePerformanceItemParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the cart remove super package performance item params
func (o *CartRemoveSuperPackagePerformanceItemParams) WithContext(ctx context.Context) *CartRemoveSuperPackagePerformanceItemParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the cart remove super package performance item params
func (o *CartRemoveSuperPackagePerformanceItemParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the cart remove super package performance item params
func (o *CartRemoveSuperPackagePerformanceItemParams) WithHTTPClient(client *http.Client) *CartRemoveSuperPackagePerformanceItemParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the cart remove super package performance item params
func (o *CartRemoveSuperPackagePerformanceItemParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPerformanceID adds the performanceID to the cart remove super package performance item params
func (o *CartRemoveSuperPackagePerformanceItemParams) WithPerformanceID(performanceID string) *CartRemoveSuperPackagePerformanceItemParams {
	o.SetPerformanceID(performanceID)
	return o
}

// SetPerformanceID adds the performanceId to the cart remove super package performance item params
func (o *CartRemoveSuperPackagePerformanceItemParams) SetPerformanceID(performanceID string) {
	o.PerformanceID = performanceID
}

// WithPerformanceLineItemID adds the performanceLineItemID to the cart remove super package performance item params
func (o *CartRemoveSuperPackagePerformanceItemParams) WithPerformanceLineItemID(performanceLineItemID string) *CartRemoveSuperPackagePerformanceItemParams {
	o.SetPerformanceLineItemID(performanceLineItemID)
	return o
}

// SetPerformanceLineItemID adds the performanceLineItemId to the cart remove super package performance item params
func (o *CartRemoveSuperPackagePerformanceItemParams) SetPerformanceLineItemID(performanceLineItemID string) {
	o.PerformanceLineItemID = performanceLineItemID
}

// WithSessionKey adds the sessionKey to the cart remove super package performance item params
func (o *CartRemoveSuperPackagePerformanceItemParams) WithSessionKey(sessionKey string) *CartRemoveSuperPackagePerformanceItemParams {
	o.SetSessionKey(sessionKey)
	return o
}

// SetSessionKey adds the sessionKey to the cart remove super package performance item params
func (o *CartRemoveSuperPackagePerformanceItemParams) SetSessionKey(sessionKey string) {
	o.SessionKey = sessionKey
}

// WithSubPackageID adds the subPackageID to the cart remove super package performance item params
func (o *CartRemoveSuperPackagePerformanceItemParams) WithSubPackageID(subPackageID string) *CartRemoveSuperPackagePerformanceItemParams {
	o.SetSubPackageID(subPackageID)
	return o
}

// SetSubPackageID adds the subPackageId to the cart remove super package performance item params
func (o *CartRemoveSuperPackagePerformanceItemParams) SetSubPackageID(subPackageID string) {
	o.SubPackageID = subPackageID
}

// WithSuperPackageLineItemID adds the superPackageLineItemID to the cart remove super package performance item params
func (o *CartRemoveSuperPackagePerformanceItemParams) WithSuperPackageLineItemID(superPackageLineItemID string) *CartRemoveSuperPackagePerformanceItemParams {
	o.SetSuperPackageLineItemID(superPackageLineItemID)
	return o
}

// SetSuperPackageLineItemID adds the superPackageLineItemId to the cart remove super package performance item params
func (o *CartRemoveSuperPackagePerformanceItemParams) SetSuperPackageLineItemID(superPackageLineItemID string) {
	o.SuperPackageLineItemID = superPackageLineItemID
}

// WriteToRequest writes these params to a swagger request
func (o *CartRemoveSuperPackagePerformanceItemParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param performanceId
	if err := r.SetPathParam("performanceId", o.PerformanceID); err != nil {
		return err
	}

	// path param performanceLineItemId
	if err := r.SetPathParam("performanceLineItemId", o.PerformanceLineItemID); err != nil {
		return err
	}

	// path param sessionKey
	if err := r.SetPathParam("sessionKey", o.SessionKey); err != nil {
		return err
	}

	// path param subPackageId
	if err := r.SetPathParam("subPackageId", o.SubPackageID); err != nil {
		return err
	}

	// path param superPackageLineItemId
	if err := r.SetPathParam("superPackageLineItemId", o.SuperPackageLineItemID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
