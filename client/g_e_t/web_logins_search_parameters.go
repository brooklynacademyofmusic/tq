// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewWebLoginsSearchParams creates a new WebLoginsSearchParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewWebLoginsSearchParams() *WebLoginsSearchParams {
	return &WebLoginsSearchParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewWebLoginsSearchParamsWithTimeout creates a new WebLoginsSearchParams object
// with the ability to set a timeout on a request.
func NewWebLoginsSearchParamsWithTimeout(timeout time.Duration) *WebLoginsSearchParams {
	return &WebLoginsSearchParams{
		timeout: timeout,
	}
}

// NewWebLoginsSearchParamsWithContext creates a new WebLoginsSearchParams object
// with the ability to set a context for a request.
func NewWebLoginsSearchParamsWithContext(ctx context.Context) *WebLoginsSearchParams {
	return &WebLoginsSearchParams{
		Context: ctx,
	}
}

// NewWebLoginsSearchParamsWithHTTPClient creates a new WebLoginsSearchParams object
// with the ability to set a custom HTTPClient for a request.
func NewWebLoginsSearchParamsWithHTTPClient(client *http.Client) *WebLoginsSearchParams {
	return &WebLoginsSearchParams{
		HTTPClient: client,
	}
}

/*
WebLoginsSearchParams contains all the parameters to send to the API endpoint

	for the web logins search operation.

	Typically these are written to a http.Request.
*/
type WebLoginsSearchParams struct {

	// EmailAddress.
	EmailAddress string

	// LoginTypeID.
	LoginTypeID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the web logins search params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *WebLoginsSearchParams) WithDefaults() *WebLoginsSearchParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the web logins search params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *WebLoginsSearchParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the web logins search params
func (o *WebLoginsSearchParams) WithTimeout(timeout time.Duration) *WebLoginsSearchParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the web logins search params
func (o *WebLoginsSearchParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the web logins search params
func (o *WebLoginsSearchParams) WithContext(ctx context.Context) *WebLoginsSearchParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the web logins search params
func (o *WebLoginsSearchParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the web logins search params
func (o *WebLoginsSearchParams) WithHTTPClient(client *http.Client) *WebLoginsSearchParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the web logins search params
func (o *WebLoginsSearchParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEmailAddress adds the emailAddress to the web logins search params
func (o *WebLoginsSearchParams) WithEmailAddress(emailAddress string) *WebLoginsSearchParams {
	o.SetEmailAddress(emailAddress)
	return o
}

// SetEmailAddress adds the emailAddress to the web logins search params
func (o *WebLoginsSearchParams) SetEmailAddress(emailAddress string) {
	o.EmailAddress = emailAddress
}

// WithLoginTypeID adds the loginTypeID to the web logins search params
func (o *WebLoginsSearchParams) WithLoginTypeID(loginTypeID string) *WebLoginsSearchParams {
	o.SetLoginTypeID(loginTypeID)
	return o
}

// SetLoginTypeID adds the loginTypeId to the web logins search params
func (o *WebLoginsSearchParams) SetLoginTypeID(loginTypeID string) {
	o.LoginTypeID = loginTypeID
}

// WriteToRequest writes these params to a swagger request
func (o *WebLoginsSearchParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param emailAddress
	qrEmailAddress := o.EmailAddress
	qEmailAddress := qrEmailAddress
	if qEmailAddress != "" {

		if err := r.SetQueryParam("emailAddress", qEmailAddress); err != nil {
			return err
		}
	}

	// query param loginTypeId
	qrLoginTypeID := o.LoginTypeID
	qLoginTypeID := qrLoginTypeID
	if qLoginTypeID != "" {

		if err := r.SetQueryParam("loginTypeId", qLoginTypeID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
