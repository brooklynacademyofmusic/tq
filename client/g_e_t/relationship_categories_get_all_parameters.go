// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewRelationshipCategoriesGetAllParams creates a new RelationshipCategoriesGetAllParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewRelationshipCategoriesGetAllParams() *RelationshipCategoriesGetAllParams {
	return &RelationshipCategoriesGetAllParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewRelationshipCategoriesGetAllParamsWithTimeout creates a new RelationshipCategoriesGetAllParams object
// with the ability to set a timeout on a request.
func NewRelationshipCategoriesGetAllParamsWithTimeout(timeout time.Duration) *RelationshipCategoriesGetAllParams {
	return &RelationshipCategoriesGetAllParams{
		timeout: timeout,
	}
}

// NewRelationshipCategoriesGetAllParamsWithContext creates a new RelationshipCategoriesGetAllParams object
// with the ability to set a context for a request.
func NewRelationshipCategoriesGetAllParamsWithContext(ctx context.Context) *RelationshipCategoriesGetAllParams {
	return &RelationshipCategoriesGetAllParams{
		Context: ctx,
	}
}

// NewRelationshipCategoriesGetAllParamsWithHTTPClient creates a new RelationshipCategoriesGetAllParams object
// with the ability to set a custom HTTPClient for a request.
func NewRelationshipCategoriesGetAllParamsWithHTTPClient(client *http.Client) *RelationshipCategoriesGetAllParams {
	return &RelationshipCategoriesGetAllParams{
		HTTPClient: client,
	}
}

/*
RelationshipCategoriesGetAllParams contains all the parameters to send to the API endpoint

	for the relationship categories get all operation.

	Typically these are written to a http.Request.
*/
type RelationshipCategoriesGetAllParams struct {

	/* MaintenanceMode.

	   Ignore control grouping (default: false)
	*/
	MaintenanceMode *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the relationship categories get all params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RelationshipCategoriesGetAllParams) WithDefaults() *RelationshipCategoriesGetAllParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the relationship categories get all params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RelationshipCategoriesGetAllParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the relationship categories get all params
func (o *RelationshipCategoriesGetAllParams) WithTimeout(timeout time.Duration) *RelationshipCategoriesGetAllParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the relationship categories get all params
func (o *RelationshipCategoriesGetAllParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the relationship categories get all params
func (o *RelationshipCategoriesGetAllParams) WithContext(ctx context.Context) *RelationshipCategoriesGetAllParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the relationship categories get all params
func (o *RelationshipCategoriesGetAllParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the relationship categories get all params
func (o *RelationshipCategoriesGetAllParams) WithHTTPClient(client *http.Client) *RelationshipCategoriesGetAllParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the relationship categories get all params
func (o *RelationshipCategoriesGetAllParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMaintenanceMode adds the maintenanceMode to the relationship categories get all params
func (o *RelationshipCategoriesGetAllParams) WithMaintenanceMode(maintenanceMode *string) *RelationshipCategoriesGetAllParams {
	o.SetMaintenanceMode(maintenanceMode)
	return o
}

// SetMaintenanceMode adds the maintenanceMode to the relationship categories get all params
func (o *RelationshipCategoriesGetAllParams) SetMaintenanceMode(maintenanceMode *string) {
	o.MaintenanceMode = maintenanceMode
}

// WriteToRequest writes these params to a swagger request
func (o *RelationshipCategoriesGetAllParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.MaintenanceMode != nil {

		// query param maintenanceMode
		var qrMaintenanceMode string

		if o.MaintenanceMode != nil {
			qrMaintenanceMode = *o.MaintenanceMode
		}
		qMaintenanceMode := qrMaintenanceMode
		if qMaintenanceMode != "" {

			if err := r.SetQueryParam("maintenanceMode", qMaintenanceMode); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
