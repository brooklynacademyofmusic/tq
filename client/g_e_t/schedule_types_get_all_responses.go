// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// ScheduleTypesGetAllReader is a Reader for the ScheduleTypesGetAll structure.
type ScheduleTypesGetAllReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ScheduleTypesGetAllReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewScheduleTypesGetAllOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewScheduleTypesGetAllDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewScheduleTypesGetAllOK creates a ScheduleTypesGetAllOK with default headers values
func NewScheduleTypesGetAllOK() *ScheduleTypesGetAllOK {
	return &ScheduleTypesGetAllOK{}
}

/*
ScheduleTypesGetAllOK describes a response with status code 200, with default header values.

OK
*/
type ScheduleTypesGetAllOK struct {
	Payload []*models.ScheduleType
}

// IsSuccess returns true when this schedule types get all o k response has a 2xx status code
func (o *ScheduleTypesGetAllOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this schedule types get all o k response has a 3xx status code
func (o *ScheduleTypesGetAllOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this schedule types get all o k response has a 4xx status code
func (o *ScheduleTypesGetAllOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this schedule types get all o k response has a 5xx status code
func (o *ScheduleTypesGetAllOK) IsServerError() bool {
	return false
}

// IsCode returns true when this schedule types get all o k response a status code equal to that given
func (o *ScheduleTypesGetAllOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the schedule types get all o k response
func (o *ScheduleTypesGetAllOK) Code() int {
	return 200
}

func (o *ScheduleTypesGetAllOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ReferenceData/ScheduleTypes][%d] scheduleTypesGetAllOK %s", 200, payload)
}

func (o *ScheduleTypesGetAllOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ReferenceData/ScheduleTypes][%d] scheduleTypesGetAllOK %s", 200, payload)
}

func (o *ScheduleTypesGetAllOK) GetPayload() []*models.ScheduleType {
	return o.Payload
}

func (o *ScheduleTypesGetAllOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewScheduleTypesGetAllDefault creates a ScheduleTypesGetAllDefault with default headers values
func NewScheduleTypesGetAllDefault(code int) *ScheduleTypesGetAllDefault {
	return &ScheduleTypesGetAllDefault{
		_statusCode: code,
	}
}

/*
ScheduleTypesGetAllDefault describes a response with status code -1, with default header values.

Error
*/
type ScheduleTypesGetAllDefault struct {
	_statusCode int

	Payload *models.ErrorMessage
}

// IsSuccess returns true when this schedule types get all default response has a 2xx status code
func (o *ScheduleTypesGetAllDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this schedule types get all default response has a 3xx status code
func (o *ScheduleTypesGetAllDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this schedule types get all default response has a 4xx status code
func (o *ScheduleTypesGetAllDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this schedule types get all default response has a 5xx status code
func (o *ScheduleTypesGetAllDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this schedule types get all default response a status code equal to that given
func (o *ScheduleTypesGetAllDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the schedule types get all default response
func (o *ScheduleTypesGetAllDefault) Code() int {
	return o._statusCode
}

func (o *ScheduleTypesGetAllDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ReferenceData/ScheduleTypes][%d] ScheduleTypes_GetAll default %s", o._statusCode, payload)
}

func (o *ScheduleTypesGetAllDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ReferenceData/ScheduleTypes][%d] ScheduleTypes_GetAll default %s", o._statusCode, payload)
}

func (o *ScheduleTypesGetAllDefault) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ScheduleTypesGetAllDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
