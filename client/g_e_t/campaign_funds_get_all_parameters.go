// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCampaignFundsGetAllParams creates a new CampaignFundsGetAllParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCampaignFundsGetAllParams() *CampaignFundsGetAllParams {
	return &CampaignFundsGetAllParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCampaignFundsGetAllParamsWithTimeout creates a new CampaignFundsGetAllParams object
// with the ability to set a timeout on a request.
func NewCampaignFundsGetAllParamsWithTimeout(timeout time.Duration) *CampaignFundsGetAllParams {
	return &CampaignFundsGetAllParams{
		timeout: timeout,
	}
}

// NewCampaignFundsGetAllParamsWithContext creates a new CampaignFundsGetAllParams object
// with the ability to set a context for a request.
func NewCampaignFundsGetAllParamsWithContext(ctx context.Context) *CampaignFundsGetAllParams {
	return &CampaignFundsGetAllParams{
		Context: ctx,
	}
}

// NewCampaignFundsGetAllParamsWithHTTPClient creates a new CampaignFundsGetAllParams object
// with the ability to set a custom HTTPClient for a request.
func NewCampaignFundsGetAllParamsWithHTTPClient(client *http.Client) *CampaignFundsGetAllParams {
	return &CampaignFundsGetAllParams{
		HTTPClient: client,
	}
}

/*
CampaignFundsGetAllParams contains all the parameters to send to the API endpoint

	for the campaign funds get all operation.

	Typically these are written to a http.Request.
*/
type CampaignFundsGetAllParams struct {

	// AsOfDateTime.
	AsOfDateTime *string

	// CampaignID.
	CampaignID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the campaign funds get all params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CampaignFundsGetAllParams) WithDefaults() *CampaignFundsGetAllParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the campaign funds get all params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CampaignFundsGetAllParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the campaign funds get all params
func (o *CampaignFundsGetAllParams) WithTimeout(timeout time.Duration) *CampaignFundsGetAllParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the campaign funds get all params
func (o *CampaignFundsGetAllParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the campaign funds get all params
func (o *CampaignFundsGetAllParams) WithContext(ctx context.Context) *CampaignFundsGetAllParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the campaign funds get all params
func (o *CampaignFundsGetAllParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the campaign funds get all params
func (o *CampaignFundsGetAllParams) WithHTTPClient(client *http.Client) *CampaignFundsGetAllParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the campaign funds get all params
func (o *CampaignFundsGetAllParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAsOfDateTime adds the asOfDateTime to the campaign funds get all params
func (o *CampaignFundsGetAllParams) WithAsOfDateTime(asOfDateTime *string) *CampaignFundsGetAllParams {
	o.SetAsOfDateTime(asOfDateTime)
	return o
}

// SetAsOfDateTime adds the asOfDateTime to the campaign funds get all params
func (o *CampaignFundsGetAllParams) SetAsOfDateTime(asOfDateTime *string) {
	o.AsOfDateTime = asOfDateTime
}

// WithCampaignID adds the campaignID to the campaign funds get all params
func (o *CampaignFundsGetAllParams) WithCampaignID(campaignID *string) *CampaignFundsGetAllParams {
	o.SetCampaignID(campaignID)
	return o
}

// SetCampaignID adds the campaignId to the campaign funds get all params
func (o *CampaignFundsGetAllParams) SetCampaignID(campaignID *string) {
	o.CampaignID = campaignID
}

// WriteToRequest writes these params to a swagger request
func (o *CampaignFundsGetAllParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AsOfDateTime != nil {

		// query param asOfDateTime
		var qrAsOfDateTime string

		if o.AsOfDateTime != nil {
			qrAsOfDateTime = *o.AsOfDateTime
		}
		qAsOfDateTime := qrAsOfDateTime
		if qAsOfDateTime != "" {

			if err := r.SetQueryParam("asOfDateTime", qAsOfDateTime); err != nil {
				return err
			}
		}
	}

	if o.CampaignID != nil {

		// query param campaignId
		var qrCampaignID string

		if o.CampaignID != nil {
			qrCampaignID = *o.CampaignID
		}
		qCampaignID := qrCampaignID
		if qCampaignID != "" {

			if err := r.SetQueryParam("campaignId", qCampaignID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
