// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewSalutationsGenerateParams creates a new SalutationsGenerateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSalutationsGenerateParams() *SalutationsGenerateParams {
	return &SalutationsGenerateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSalutationsGenerateParamsWithTimeout creates a new SalutationsGenerateParams object
// with the ability to set a timeout on a request.
func NewSalutationsGenerateParamsWithTimeout(timeout time.Duration) *SalutationsGenerateParams {
	return &SalutationsGenerateParams{
		timeout: timeout,
	}
}

// NewSalutationsGenerateParamsWithContext creates a new SalutationsGenerateParams object
// with the ability to set a context for a request.
func NewSalutationsGenerateParamsWithContext(ctx context.Context) *SalutationsGenerateParams {
	return &SalutationsGenerateParams{
		Context: ctx,
	}
}

// NewSalutationsGenerateParamsWithHTTPClient creates a new SalutationsGenerateParams object
// with the ability to set a custom HTTPClient for a request.
func NewSalutationsGenerateParamsWithHTTPClient(client *http.Client) *SalutationsGenerateParams {
	return &SalutationsGenerateParams{
		HTTPClient: client,
	}
}

/*
SalutationsGenerateParams contains all the parameters to send to the API endpoint

	for the salutations generate operation.

	Typically these are written to a http.Request.
*/
type SalutationsGenerateParams struct {

	/* ConstituentID.

	   Id of constituent. Not required if constituentTypeId or formulaId is provided.
	*/
	ConstituentID *string

	/* ConstituentTypeID.

	   Id from ReferenceData/ConstituentTypes (TR_CUST_TYPE).
	*/
	ConstituentTypeID *string

	// Fname1.
	Fname1 *string

	// Fname2.
	Fname2 *string

	/* FormulaID.

	   Id of format for salutation from ReferenceData/SalutationFormats (TR_SALUTATION_FORMAT)
	*/
	FormulaID *string

	/* Gender1.

	   Optional id value from ReferenceData/Genders (TR_GENDER).
	*/
	Gender1 *string

	/* Gender2.

	   Optional id value from ReferenceData/Genders (TR_GENDER).
	*/
	Gender2 *string

	// Lname1.
	Lname1 *string

	// Lname2.
	Lname2 *string

	// LnameGroup.
	LnameGroup *string

	/* MaxLength.

	   Maximum length of generated salutation fields.
	*/
	MaxLength *string

	// Mname1.
	Mname1 *string

	// Mname2.
	Mname2 *string

	/* Prefix1.

	   Optional id value from ReferenceData/Prefixes (TR_PREFIX).
	*/
	Prefix1 *string

	/* Prefix2.

	   Optional id value from ReferenceData/Prefixes (TR_PREFIX).
	*/
	Prefix2 *string

	/* Status1.

	   Optional id value from ReferenceData/NameStatuses (TR_NAME_STATUS).
	*/
	Status1 *string

	/* Status2.

	   Optional id value from ReferenceData/NameStatuses (TR_NAME_STATUS).
	*/
	Status2 *string

	/* Suffix1.

	   Optional id value from ReferenceData/Suffixes (TR_SUFFIX).
	*/
	Suffix1 *string

	/* Suffix2.

	   Optional id value from ReferenceData/Suffixes (TR_SUFFIX).
	*/
	Suffix2 *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the salutations generate params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SalutationsGenerateParams) WithDefaults() *SalutationsGenerateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the salutations generate params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SalutationsGenerateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the salutations generate params
func (o *SalutationsGenerateParams) WithTimeout(timeout time.Duration) *SalutationsGenerateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the salutations generate params
func (o *SalutationsGenerateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the salutations generate params
func (o *SalutationsGenerateParams) WithContext(ctx context.Context) *SalutationsGenerateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the salutations generate params
func (o *SalutationsGenerateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the salutations generate params
func (o *SalutationsGenerateParams) WithHTTPClient(client *http.Client) *SalutationsGenerateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the salutations generate params
func (o *SalutationsGenerateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConstituentID adds the constituentID to the salutations generate params
func (o *SalutationsGenerateParams) WithConstituentID(constituentID *string) *SalutationsGenerateParams {
	o.SetConstituentID(constituentID)
	return o
}

// SetConstituentID adds the constituentId to the salutations generate params
func (o *SalutationsGenerateParams) SetConstituentID(constituentID *string) {
	o.ConstituentID = constituentID
}

// WithConstituentTypeID adds the constituentTypeID to the salutations generate params
func (o *SalutationsGenerateParams) WithConstituentTypeID(constituentTypeID *string) *SalutationsGenerateParams {
	o.SetConstituentTypeID(constituentTypeID)
	return o
}

// SetConstituentTypeID adds the constituentTypeId to the salutations generate params
func (o *SalutationsGenerateParams) SetConstituentTypeID(constituentTypeID *string) {
	o.ConstituentTypeID = constituentTypeID
}

// WithFname1 adds the fname1 to the salutations generate params
func (o *SalutationsGenerateParams) WithFname1(fname1 *string) *SalutationsGenerateParams {
	o.SetFname1(fname1)
	return o
}

// SetFname1 adds the fname1 to the salutations generate params
func (o *SalutationsGenerateParams) SetFname1(fname1 *string) {
	o.Fname1 = fname1
}

// WithFname2 adds the fname2 to the salutations generate params
func (o *SalutationsGenerateParams) WithFname2(fname2 *string) *SalutationsGenerateParams {
	o.SetFname2(fname2)
	return o
}

// SetFname2 adds the fname2 to the salutations generate params
func (o *SalutationsGenerateParams) SetFname2(fname2 *string) {
	o.Fname2 = fname2
}

// WithFormulaID adds the formulaID to the salutations generate params
func (o *SalutationsGenerateParams) WithFormulaID(formulaID *string) *SalutationsGenerateParams {
	o.SetFormulaID(formulaID)
	return o
}

// SetFormulaID adds the formulaId to the salutations generate params
func (o *SalutationsGenerateParams) SetFormulaID(formulaID *string) {
	o.FormulaID = formulaID
}

// WithGender1 adds the gender1 to the salutations generate params
func (o *SalutationsGenerateParams) WithGender1(gender1 *string) *SalutationsGenerateParams {
	o.SetGender1(gender1)
	return o
}

// SetGender1 adds the gender1 to the salutations generate params
func (o *SalutationsGenerateParams) SetGender1(gender1 *string) {
	o.Gender1 = gender1
}

// WithGender2 adds the gender2 to the salutations generate params
func (o *SalutationsGenerateParams) WithGender2(gender2 *string) *SalutationsGenerateParams {
	o.SetGender2(gender2)
	return o
}

// SetGender2 adds the gender2 to the salutations generate params
func (o *SalutationsGenerateParams) SetGender2(gender2 *string) {
	o.Gender2 = gender2
}

// WithLname1 adds the lname1 to the salutations generate params
func (o *SalutationsGenerateParams) WithLname1(lname1 *string) *SalutationsGenerateParams {
	o.SetLname1(lname1)
	return o
}

// SetLname1 adds the lname1 to the salutations generate params
func (o *SalutationsGenerateParams) SetLname1(lname1 *string) {
	o.Lname1 = lname1
}

// WithLname2 adds the lname2 to the salutations generate params
func (o *SalutationsGenerateParams) WithLname2(lname2 *string) *SalutationsGenerateParams {
	o.SetLname2(lname2)
	return o
}

// SetLname2 adds the lname2 to the salutations generate params
func (o *SalutationsGenerateParams) SetLname2(lname2 *string) {
	o.Lname2 = lname2
}

// WithLnameGroup adds the lnameGroup to the salutations generate params
func (o *SalutationsGenerateParams) WithLnameGroup(lnameGroup *string) *SalutationsGenerateParams {
	o.SetLnameGroup(lnameGroup)
	return o
}

// SetLnameGroup adds the lnameGroup to the salutations generate params
func (o *SalutationsGenerateParams) SetLnameGroup(lnameGroup *string) {
	o.LnameGroup = lnameGroup
}

// WithMaxLength adds the maxLength to the salutations generate params
func (o *SalutationsGenerateParams) WithMaxLength(maxLength *string) *SalutationsGenerateParams {
	o.SetMaxLength(maxLength)
	return o
}

// SetMaxLength adds the maxLength to the salutations generate params
func (o *SalutationsGenerateParams) SetMaxLength(maxLength *string) {
	o.MaxLength = maxLength
}

// WithMname1 adds the mname1 to the salutations generate params
func (o *SalutationsGenerateParams) WithMname1(mname1 *string) *SalutationsGenerateParams {
	o.SetMname1(mname1)
	return o
}

// SetMname1 adds the mname1 to the salutations generate params
func (o *SalutationsGenerateParams) SetMname1(mname1 *string) {
	o.Mname1 = mname1
}

// WithMname2 adds the mname2 to the salutations generate params
func (o *SalutationsGenerateParams) WithMname2(mname2 *string) *SalutationsGenerateParams {
	o.SetMname2(mname2)
	return o
}

// SetMname2 adds the mname2 to the salutations generate params
func (o *SalutationsGenerateParams) SetMname2(mname2 *string) {
	o.Mname2 = mname2
}

// WithPrefix1 adds the prefix1 to the salutations generate params
func (o *SalutationsGenerateParams) WithPrefix1(prefix1 *string) *SalutationsGenerateParams {
	o.SetPrefix1(prefix1)
	return o
}

// SetPrefix1 adds the prefix1 to the salutations generate params
func (o *SalutationsGenerateParams) SetPrefix1(prefix1 *string) {
	o.Prefix1 = prefix1
}

// WithPrefix2 adds the prefix2 to the salutations generate params
func (o *SalutationsGenerateParams) WithPrefix2(prefix2 *string) *SalutationsGenerateParams {
	o.SetPrefix2(prefix2)
	return o
}

// SetPrefix2 adds the prefix2 to the salutations generate params
func (o *SalutationsGenerateParams) SetPrefix2(prefix2 *string) {
	o.Prefix2 = prefix2
}

// WithStatus1 adds the status1 to the salutations generate params
func (o *SalutationsGenerateParams) WithStatus1(status1 *string) *SalutationsGenerateParams {
	o.SetStatus1(status1)
	return o
}

// SetStatus1 adds the status1 to the salutations generate params
func (o *SalutationsGenerateParams) SetStatus1(status1 *string) {
	o.Status1 = status1
}

// WithStatus2 adds the status2 to the salutations generate params
func (o *SalutationsGenerateParams) WithStatus2(status2 *string) *SalutationsGenerateParams {
	o.SetStatus2(status2)
	return o
}

// SetStatus2 adds the status2 to the salutations generate params
func (o *SalutationsGenerateParams) SetStatus2(status2 *string) {
	o.Status2 = status2
}

// WithSuffix1 adds the suffix1 to the salutations generate params
func (o *SalutationsGenerateParams) WithSuffix1(suffix1 *string) *SalutationsGenerateParams {
	o.SetSuffix1(suffix1)
	return o
}

// SetSuffix1 adds the suffix1 to the salutations generate params
func (o *SalutationsGenerateParams) SetSuffix1(suffix1 *string) {
	o.Suffix1 = suffix1
}

// WithSuffix2 adds the suffix2 to the salutations generate params
func (o *SalutationsGenerateParams) WithSuffix2(suffix2 *string) *SalutationsGenerateParams {
	o.SetSuffix2(suffix2)
	return o
}

// SetSuffix2 adds the suffix2 to the salutations generate params
func (o *SalutationsGenerateParams) SetSuffix2(suffix2 *string) {
	o.Suffix2 = suffix2
}

// WriteToRequest writes these params to a swagger request
func (o *SalutationsGenerateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ConstituentID != nil {

		// query param constituentId
		var qrConstituentID string

		if o.ConstituentID != nil {
			qrConstituentID = *o.ConstituentID
		}
		qConstituentID := qrConstituentID
		if qConstituentID != "" {

			if err := r.SetQueryParam("constituentId", qConstituentID); err != nil {
				return err
			}
		}
	}

	if o.ConstituentTypeID != nil {

		// query param constituentTypeId
		var qrConstituentTypeID string

		if o.ConstituentTypeID != nil {
			qrConstituentTypeID = *o.ConstituentTypeID
		}
		qConstituentTypeID := qrConstituentTypeID
		if qConstituentTypeID != "" {

			if err := r.SetQueryParam("constituentTypeId", qConstituentTypeID); err != nil {
				return err
			}
		}
	}

	if o.Fname1 != nil {

		// query param fname1
		var qrFname1 string

		if o.Fname1 != nil {
			qrFname1 = *o.Fname1
		}
		qFname1 := qrFname1
		if qFname1 != "" {

			if err := r.SetQueryParam("fname1", qFname1); err != nil {
				return err
			}
		}
	}

	if o.Fname2 != nil {

		// query param fname2
		var qrFname2 string

		if o.Fname2 != nil {
			qrFname2 = *o.Fname2
		}
		qFname2 := qrFname2
		if qFname2 != "" {

			if err := r.SetQueryParam("fname2", qFname2); err != nil {
				return err
			}
		}
	}

	if o.FormulaID != nil {

		// query param formulaId
		var qrFormulaID string

		if o.FormulaID != nil {
			qrFormulaID = *o.FormulaID
		}
		qFormulaID := qrFormulaID
		if qFormulaID != "" {

			if err := r.SetQueryParam("formulaId", qFormulaID); err != nil {
				return err
			}
		}
	}

	if o.Gender1 != nil {

		// query param gender1
		var qrGender1 string

		if o.Gender1 != nil {
			qrGender1 = *o.Gender1
		}
		qGender1 := qrGender1
		if qGender1 != "" {

			if err := r.SetQueryParam("gender1", qGender1); err != nil {
				return err
			}
		}
	}

	if o.Gender2 != nil {

		// query param gender2
		var qrGender2 string

		if o.Gender2 != nil {
			qrGender2 = *o.Gender2
		}
		qGender2 := qrGender2
		if qGender2 != "" {

			if err := r.SetQueryParam("gender2", qGender2); err != nil {
				return err
			}
		}
	}

	if o.Lname1 != nil {

		// query param lname1
		var qrLname1 string

		if o.Lname1 != nil {
			qrLname1 = *o.Lname1
		}
		qLname1 := qrLname1
		if qLname1 != "" {

			if err := r.SetQueryParam("lname1", qLname1); err != nil {
				return err
			}
		}
	}

	if o.Lname2 != nil {

		// query param lname2
		var qrLname2 string

		if o.Lname2 != nil {
			qrLname2 = *o.Lname2
		}
		qLname2 := qrLname2
		if qLname2 != "" {

			if err := r.SetQueryParam("lname2", qLname2); err != nil {
				return err
			}
		}
	}

	if o.LnameGroup != nil {

		// query param lnameGroup
		var qrLnameGroup string

		if o.LnameGroup != nil {
			qrLnameGroup = *o.LnameGroup
		}
		qLnameGroup := qrLnameGroup
		if qLnameGroup != "" {

			if err := r.SetQueryParam("lnameGroup", qLnameGroup); err != nil {
				return err
			}
		}
	}

	if o.MaxLength != nil {

		// query param maxLength
		var qrMaxLength string

		if o.MaxLength != nil {
			qrMaxLength = *o.MaxLength
		}
		qMaxLength := qrMaxLength
		if qMaxLength != "" {

			if err := r.SetQueryParam("maxLength", qMaxLength); err != nil {
				return err
			}
		}
	}

	if o.Mname1 != nil {

		// query param mname1
		var qrMname1 string

		if o.Mname1 != nil {
			qrMname1 = *o.Mname1
		}
		qMname1 := qrMname1
		if qMname1 != "" {

			if err := r.SetQueryParam("mname1", qMname1); err != nil {
				return err
			}
		}
	}

	if o.Mname2 != nil {

		// query param mname2
		var qrMname2 string

		if o.Mname2 != nil {
			qrMname2 = *o.Mname2
		}
		qMname2 := qrMname2
		if qMname2 != "" {

			if err := r.SetQueryParam("mname2", qMname2); err != nil {
				return err
			}
		}
	}

	if o.Prefix1 != nil {

		// query param prefix1
		var qrPrefix1 string

		if o.Prefix1 != nil {
			qrPrefix1 = *o.Prefix1
		}
		qPrefix1 := qrPrefix1
		if qPrefix1 != "" {

			if err := r.SetQueryParam("prefix1", qPrefix1); err != nil {
				return err
			}
		}
	}

	if o.Prefix2 != nil {

		// query param prefix2
		var qrPrefix2 string

		if o.Prefix2 != nil {
			qrPrefix2 = *o.Prefix2
		}
		qPrefix2 := qrPrefix2
		if qPrefix2 != "" {

			if err := r.SetQueryParam("prefix2", qPrefix2); err != nil {
				return err
			}
		}
	}

	if o.Status1 != nil {

		// query param status1
		var qrStatus1 string

		if o.Status1 != nil {
			qrStatus1 = *o.Status1
		}
		qStatus1 := qrStatus1
		if qStatus1 != "" {

			if err := r.SetQueryParam("status1", qStatus1); err != nil {
				return err
			}
		}
	}

	if o.Status2 != nil {

		// query param status2
		var qrStatus2 string

		if o.Status2 != nil {
			qrStatus2 = *o.Status2
		}
		qStatus2 := qrStatus2
		if qStatus2 != "" {

			if err := r.SetQueryParam("status2", qStatus2); err != nil {
				return err
			}
		}
	}

	if o.Suffix1 != nil {

		// query param suffix1
		var qrSuffix1 string

		if o.Suffix1 != nil {
			qrSuffix1 = *o.Suffix1
		}
		qSuffix1 := qrSuffix1
		if qSuffix1 != "" {

			if err := r.SetQueryParam("suffix1", qSuffix1); err != nil {
				return err
			}
		}
	}

	if o.Suffix2 != nil {

		// query param suffix2
		var qrSuffix2 string

		if o.Suffix2 != nil {
			qrSuffix2 = *o.Suffix2
		}
		qSuffix2 := qrSuffix2
		if qSuffix2 != "" {

			if err := r.SetQueryParam("suffix2", qSuffix2); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
