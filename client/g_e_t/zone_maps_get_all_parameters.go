// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewZoneMapsGetAllParams creates a new ZoneMapsGetAllParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewZoneMapsGetAllParams() *ZoneMapsGetAllParams {
	return &ZoneMapsGetAllParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewZoneMapsGetAllParamsWithTimeout creates a new ZoneMapsGetAllParams object
// with the ability to set a timeout on a request.
func NewZoneMapsGetAllParamsWithTimeout(timeout time.Duration) *ZoneMapsGetAllParams {
	return &ZoneMapsGetAllParams{
		timeout: timeout,
	}
}

// NewZoneMapsGetAllParamsWithContext creates a new ZoneMapsGetAllParams object
// with the ability to set a context for a request.
func NewZoneMapsGetAllParamsWithContext(ctx context.Context) *ZoneMapsGetAllParams {
	return &ZoneMapsGetAllParams{
		Context: ctx,
	}
}

// NewZoneMapsGetAllParamsWithHTTPClient creates a new ZoneMapsGetAllParams object
// with the ability to set a custom HTTPClient for a request.
func NewZoneMapsGetAllParamsWithHTTPClient(client *http.Client) *ZoneMapsGetAllParams {
	return &ZoneMapsGetAllParams{
		HTTPClient: client,
	}
}

/*
ZoneMapsGetAllParams contains all the parameters to send to the API endpoint

	for the zone maps get all operation.

	Typically these are written to a http.Request.
*/
type ZoneMapsGetAllParams struct {

	// FacilityID.
	FacilityID *string

	// SeatMapID.
	SeatMapID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the zone maps get all params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ZoneMapsGetAllParams) WithDefaults() *ZoneMapsGetAllParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the zone maps get all params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ZoneMapsGetAllParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the zone maps get all params
func (o *ZoneMapsGetAllParams) WithTimeout(timeout time.Duration) *ZoneMapsGetAllParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the zone maps get all params
func (o *ZoneMapsGetAllParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the zone maps get all params
func (o *ZoneMapsGetAllParams) WithContext(ctx context.Context) *ZoneMapsGetAllParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the zone maps get all params
func (o *ZoneMapsGetAllParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the zone maps get all params
func (o *ZoneMapsGetAllParams) WithHTTPClient(client *http.Client) *ZoneMapsGetAllParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the zone maps get all params
func (o *ZoneMapsGetAllParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFacilityID adds the facilityID to the zone maps get all params
func (o *ZoneMapsGetAllParams) WithFacilityID(facilityID *string) *ZoneMapsGetAllParams {
	o.SetFacilityID(facilityID)
	return o
}

// SetFacilityID adds the facilityId to the zone maps get all params
func (o *ZoneMapsGetAllParams) SetFacilityID(facilityID *string) {
	o.FacilityID = facilityID
}

// WithSeatMapID adds the seatMapID to the zone maps get all params
func (o *ZoneMapsGetAllParams) WithSeatMapID(seatMapID *string) *ZoneMapsGetAllParams {
	o.SetSeatMapID(seatMapID)
	return o
}

// SetSeatMapID adds the seatMapId to the zone maps get all params
func (o *ZoneMapsGetAllParams) SetSeatMapID(seatMapID *string) {
	o.SeatMapID = seatMapID
}

// WriteToRequest writes these params to a swagger request
func (o *ZoneMapsGetAllParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.FacilityID != nil {

		// query param facilityId
		var qrFacilityID string

		if o.FacilityID != nil {
			qrFacilityID = *o.FacilityID
		}
		qFacilityID := qrFacilityID
		if qFacilityID != "" {

			if err := r.SetQueryParam("facilityId", qFacilityID); err != nil {
				return err
			}
		}
	}

	if o.SeatMapID != nil {

		// query param seatMapId
		var qrSeatMapID string

		if o.SeatMapID != nil {
			qrSeatMapID = *o.SeatMapID
		}
		qSeatMapID := qrSeatMapID
		if qSeatMapID != "" {

			if err := r.SetQueryParam("seatMapId", qSeatMapID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
