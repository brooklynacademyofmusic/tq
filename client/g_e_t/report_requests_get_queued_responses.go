// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// ReportRequestsGetQueuedReader is a Reader for the ReportRequestsGetQueued structure.
type ReportRequestsGetQueuedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReportRequestsGetQueuedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReportRequestsGetQueuedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewReportRequestsGetQueuedDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReportRequestsGetQueuedOK creates a ReportRequestsGetQueuedOK with default headers values
func NewReportRequestsGetQueuedOK() *ReportRequestsGetQueuedOK {
	return &ReportRequestsGetQueuedOK{}
}

/*
ReportRequestsGetQueuedOK describes a response with status code 200, with default header values.

OK
*/
type ReportRequestsGetQueuedOK struct {
	Payload []*models.ReportRequest
}

// IsSuccess returns true when this report requests get queued o k response has a 2xx status code
func (o *ReportRequestsGetQueuedOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this report requests get queued o k response has a 3xx status code
func (o *ReportRequestsGetQueuedOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this report requests get queued o k response has a 4xx status code
func (o *ReportRequestsGetQueuedOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this report requests get queued o k response has a 5xx status code
func (o *ReportRequestsGetQueuedOK) IsServerError() bool {
	return false
}

// IsCode returns true when this report requests get queued o k response a status code equal to that given
func (o *ReportRequestsGetQueuedOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the report requests get queued o k response
func (o *ReportRequestsGetQueuedOK) Code() int {
	return 200
}

func (o *ReportRequestsGetQueuedOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /Reporting/ReportRequests/Queued][%d] reportRequestsGetQueuedOK %s", 200, payload)
}

func (o *ReportRequestsGetQueuedOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /Reporting/ReportRequests/Queued][%d] reportRequestsGetQueuedOK %s", 200, payload)
}

func (o *ReportRequestsGetQueuedOK) GetPayload() []*models.ReportRequest {
	return o.Payload
}

func (o *ReportRequestsGetQueuedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReportRequestsGetQueuedDefault creates a ReportRequestsGetQueuedDefault with default headers values
func NewReportRequestsGetQueuedDefault(code int) *ReportRequestsGetQueuedDefault {
	return &ReportRequestsGetQueuedDefault{
		_statusCode: code,
	}
}

/*
ReportRequestsGetQueuedDefault describes a response with status code -1, with default header values.

Error
*/
type ReportRequestsGetQueuedDefault struct {
	_statusCode int

	Payload *models.ErrorMessage
}

// IsSuccess returns true when this report requests get queued default response has a 2xx status code
func (o *ReportRequestsGetQueuedDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this report requests get queued default response has a 3xx status code
func (o *ReportRequestsGetQueuedDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this report requests get queued default response has a 4xx status code
func (o *ReportRequestsGetQueuedDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this report requests get queued default response has a 5xx status code
func (o *ReportRequestsGetQueuedDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this report requests get queued default response a status code equal to that given
func (o *ReportRequestsGetQueuedDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the report requests get queued default response
func (o *ReportRequestsGetQueuedDefault) Code() int {
	return o._statusCode
}

func (o *ReportRequestsGetQueuedDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /Reporting/ReportRequests/Queued][%d] ReportRequests_GetQueued default %s", o._statusCode, payload)
}

func (o *ReportRequestsGetQueuedDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /Reporting/ReportRequests/Queued][%d] ReportRequests_GetQueued default %s", o._statusCode, payload)
}

func (o *ReportRequestsGetQueuedDefault) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ReportRequestsGetQueuedDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
