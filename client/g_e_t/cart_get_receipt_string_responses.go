// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// CartGetReceiptStringReader is a Reader for the CartGetReceiptString structure.
type CartGetReceiptStringReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CartGetReceiptStringReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCartGetReceiptStringOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCartGetReceiptStringDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCartGetReceiptStringOK creates a CartGetReceiptStringOK with default headers values
func NewCartGetReceiptStringOK() *CartGetReceiptStringOK {
	return &CartGetReceiptStringOK{}
}

/*
CartGetReceiptStringOK describes a response with status code 200, with default header values.

OK
*/
type CartGetReceiptStringOK struct {
	Payload *models.ReceiptStringResponse
}

// IsSuccess returns true when this cart get receipt string o k response has a 2xx status code
func (o *CartGetReceiptStringOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this cart get receipt string o k response has a 3xx status code
func (o *CartGetReceiptStringOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this cart get receipt string o k response has a 4xx status code
func (o *CartGetReceiptStringOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this cart get receipt string o k response has a 5xx status code
func (o *CartGetReceiptStringOK) IsServerError() bool {
	return false
}

// IsCode returns true when this cart get receipt string o k response a status code equal to that given
func (o *CartGetReceiptStringOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the cart get receipt string o k response
func (o *CartGetReceiptStringOK) Code() int {
	return 200
}

func (o *CartGetReceiptStringOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /Web/Cart/{sessionKey}/ReceiptString][%d] cartGetReceiptStringOK %s", 200, payload)
}

func (o *CartGetReceiptStringOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /Web/Cart/{sessionKey}/ReceiptString][%d] cartGetReceiptStringOK %s", 200, payload)
}

func (o *CartGetReceiptStringOK) GetPayload() *models.ReceiptStringResponse {
	return o.Payload
}

func (o *CartGetReceiptStringOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReceiptStringResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCartGetReceiptStringDefault creates a CartGetReceiptStringDefault with default headers values
func NewCartGetReceiptStringDefault(code int) *CartGetReceiptStringDefault {
	return &CartGetReceiptStringDefault{
		_statusCode: code,
	}
}

/*
CartGetReceiptStringDefault describes a response with status code -1, with default header values.

Error
*/
type CartGetReceiptStringDefault struct {
	_statusCode int

	Payload *models.ErrorMessage
}

// IsSuccess returns true when this cart get receipt string default response has a 2xx status code
func (o *CartGetReceiptStringDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this cart get receipt string default response has a 3xx status code
func (o *CartGetReceiptStringDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this cart get receipt string default response has a 4xx status code
func (o *CartGetReceiptStringDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this cart get receipt string default response has a 5xx status code
func (o *CartGetReceiptStringDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this cart get receipt string default response a status code equal to that given
func (o *CartGetReceiptStringDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the cart get receipt string default response
func (o *CartGetReceiptStringDefault) Code() int {
	return o._statusCode
}

func (o *CartGetReceiptStringDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /Web/Cart/{sessionKey}/ReceiptString][%d] Cart_GetReceiptString default %s", o._statusCode, payload)
}

func (o *CartGetReceiptStringDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /Web/Cart/{sessionKey}/ReceiptString][%d] Cart_GetReceiptString default %s", o._statusCode, payload)
}

func (o *CartGetReceiptStringDefault) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *CartGetReceiptStringDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
