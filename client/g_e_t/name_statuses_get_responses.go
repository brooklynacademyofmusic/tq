// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// NameStatusesGetReader is a Reader for the NameStatusesGet structure.
type NameStatusesGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NameStatusesGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNameStatusesGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewNameStatusesGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNameStatusesGetOK creates a NameStatusesGetOK with default headers values
func NewNameStatusesGetOK() *NameStatusesGetOK {
	return &NameStatusesGetOK{}
}

/*
NameStatusesGetOK describes a response with status code 200, with default header values.

OK
*/
type NameStatusesGetOK struct {
	Payload *models.NameStatus
}

// IsSuccess returns true when this name statuses get o k response has a 2xx status code
func (o *NameStatusesGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this name statuses get o k response has a 3xx status code
func (o *NameStatusesGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this name statuses get o k response has a 4xx status code
func (o *NameStatusesGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this name statuses get o k response has a 5xx status code
func (o *NameStatusesGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this name statuses get o k response a status code equal to that given
func (o *NameStatusesGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the name statuses get o k response
func (o *NameStatusesGetOK) Code() int {
	return 200
}

func (o *NameStatusesGetOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ReferenceData/NameStatuses/{id}][%d] nameStatusesGetOK %s", 200, payload)
}

func (o *NameStatusesGetOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ReferenceData/NameStatuses/{id}][%d] nameStatusesGetOK %s", 200, payload)
}

func (o *NameStatusesGetOK) GetPayload() *models.NameStatus {
	return o.Payload
}

func (o *NameStatusesGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NameStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNameStatusesGetDefault creates a NameStatusesGetDefault with default headers values
func NewNameStatusesGetDefault(code int) *NameStatusesGetDefault {
	return &NameStatusesGetDefault{
		_statusCode: code,
	}
}

/*
NameStatusesGetDefault describes a response with status code -1, with default header values.

Error
*/
type NameStatusesGetDefault struct {
	_statusCode int

	Payload *models.ErrorMessage
}

// IsSuccess returns true when this name statuses get default response has a 2xx status code
func (o *NameStatusesGetDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this name statuses get default response has a 3xx status code
func (o *NameStatusesGetDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this name statuses get default response has a 4xx status code
func (o *NameStatusesGetDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this name statuses get default response has a 5xx status code
func (o *NameStatusesGetDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this name statuses get default response a status code equal to that given
func (o *NameStatusesGetDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the name statuses get default response
func (o *NameStatusesGetDefault) Code() int {
	return o._statusCode
}

func (o *NameStatusesGetDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ReferenceData/NameStatuses/{id}][%d] NameStatuses_Get default %s", o._statusCode, payload)
}

func (o *NameStatusesGetDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ReferenceData/NameStatuses/{id}][%d] NameStatuses_Get default %s", o._statusCode, payload)
}

func (o *NameStatusesGetDefault) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *NameStatusesGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
