// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPerformancesGetPerformanceZoneAvailabilitiesParams creates a new PerformancesGetPerformanceZoneAvailabilitiesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPerformancesGetPerformanceZoneAvailabilitiesParams() *PerformancesGetPerformanceZoneAvailabilitiesParams {
	return &PerformancesGetPerformanceZoneAvailabilitiesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPerformancesGetPerformanceZoneAvailabilitiesParamsWithTimeout creates a new PerformancesGetPerformanceZoneAvailabilitiesParams object
// with the ability to set a timeout on a request.
func NewPerformancesGetPerformanceZoneAvailabilitiesParamsWithTimeout(timeout time.Duration) *PerformancesGetPerformanceZoneAvailabilitiesParams {
	return &PerformancesGetPerformanceZoneAvailabilitiesParams{
		timeout: timeout,
	}
}

// NewPerformancesGetPerformanceZoneAvailabilitiesParamsWithContext creates a new PerformancesGetPerformanceZoneAvailabilitiesParams object
// with the ability to set a context for a request.
func NewPerformancesGetPerformanceZoneAvailabilitiesParamsWithContext(ctx context.Context) *PerformancesGetPerformanceZoneAvailabilitiesParams {
	return &PerformancesGetPerformanceZoneAvailabilitiesParams{
		Context: ctx,
	}
}

// NewPerformancesGetPerformanceZoneAvailabilitiesParamsWithHTTPClient creates a new PerformancesGetPerformanceZoneAvailabilitiesParams object
// with the ability to set a custom HTTPClient for a request.
func NewPerformancesGetPerformanceZoneAvailabilitiesParamsWithHTTPClient(client *http.Client) *PerformancesGetPerformanceZoneAvailabilitiesParams {
	return &PerformancesGetPerformanceZoneAvailabilitiesParams{
		HTTPClient: client,
	}
}

/*
PerformancesGetPerformanceZoneAvailabilitiesParams contains all the parameters to send to the API endpoint

	for the performances get performance zone availabilities operation.

	Typically these are written to a http.Request.
*/
type PerformancesGetPerformanceZoneAvailabilitiesParams struct {

	// PerformanceIds.
	PerformanceIds *string

	// SectionIds.
	SectionIds *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the performances get performance zone availabilities params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PerformancesGetPerformanceZoneAvailabilitiesParams) WithDefaults() *PerformancesGetPerformanceZoneAvailabilitiesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the performances get performance zone availabilities params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PerformancesGetPerformanceZoneAvailabilitiesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the performances get performance zone availabilities params
func (o *PerformancesGetPerformanceZoneAvailabilitiesParams) WithTimeout(timeout time.Duration) *PerformancesGetPerformanceZoneAvailabilitiesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the performances get performance zone availabilities params
func (o *PerformancesGetPerformanceZoneAvailabilitiesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the performances get performance zone availabilities params
func (o *PerformancesGetPerformanceZoneAvailabilitiesParams) WithContext(ctx context.Context) *PerformancesGetPerformanceZoneAvailabilitiesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the performances get performance zone availabilities params
func (o *PerformancesGetPerformanceZoneAvailabilitiesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the performances get performance zone availabilities params
func (o *PerformancesGetPerformanceZoneAvailabilitiesParams) WithHTTPClient(client *http.Client) *PerformancesGetPerformanceZoneAvailabilitiesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the performances get performance zone availabilities params
func (o *PerformancesGetPerformanceZoneAvailabilitiesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPerformanceIds adds the performanceIds to the performances get performance zone availabilities params
func (o *PerformancesGetPerformanceZoneAvailabilitiesParams) WithPerformanceIds(performanceIds *string) *PerformancesGetPerformanceZoneAvailabilitiesParams {
	o.SetPerformanceIds(performanceIds)
	return o
}

// SetPerformanceIds adds the performanceIds to the performances get performance zone availabilities params
func (o *PerformancesGetPerformanceZoneAvailabilitiesParams) SetPerformanceIds(performanceIds *string) {
	o.PerformanceIds = performanceIds
}

// WithSectionIds adds the sectionIds to the performances get performance zone availabilities params
func (o *PerformancesGetPerformanceZoneAvailabilitiesParams) WithSectionIds(sectionIds *string) *PerformancesGetPerformanceZoneAvailabilitiesParams {
	o.SetSectionIds(sectionIds)
	return o
}

// SetSectionIds adds the sectionIds to the performances get performance zone availabilities params
func (o *PerformancesGetPerformanceZoneAvailabilitiesParams) SetSectionIds(sectionIds *string) {
	o.SectionIds = sectionIds
}

// WriteToRequest writes these params to a swagger request
func (o *PerformancesGetPerformanceZoneAvailabilitiesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.PerformanceIds != nil {

		// query param performanceIds
		var qrPerformanceIds string

		if o.PerformanceIds != nil {
			qrPerformanceIds = *o.PerformanceIds
		}
		qPerformanceIds := qrPerformanceIds
		if qPerformanceIds != "" {

			if err := r.SetQueryParam("performanceIds", qPerformanceIds); err != nil {
				return err
			}
		}
	}

	if o.SectionIds != nil {

		// query param sectionIds
		var qrSectionIds string

		if o.SectionIds != nil {
			qrSectionIds = *o.SectionIds
		}
		qSectionIds := qrSectionIds
		if qSectionIds != "" {

			if err := r.SetQueryParam("sectionIds", qSectionIds); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
