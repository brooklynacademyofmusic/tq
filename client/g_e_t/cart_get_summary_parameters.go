// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCartGetSummaryParams creates a new CartGetSummaryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCartGetSummaryParams() *CartGetSummaryParams {
	return &CartGetSummaryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCartGetSummaryParamsWithTimeout creates a new CartGetSummaryParams object
// with the ability to set a timeout on a request.
func NewCartGetSummaryParamsWithTimeout(timeout time.Duration) *CartGetSummaryParams {
	return &CartGetSummaryParams{
		timeout: timeout,
	}
}

// NewCartGetSummaryParamsWithContext creates a new CartGetSummaryParams object
// with the ability to set a context for a request.
func NewCartGetSummaryParamsWithContext(ctx context.Context) *CartGetSummaryParams {
	return &CartGetSummaryParams{
		Context: ctx,
	}
}

// NewCartGetSummaryParamsWithHTTPClient creates a new CartGetSummaryParams object
// with the ability to set a custom HTTPClient for a request.
func NewCartGetSummaryParamsWithHTTPClient(client *http.Client) *CartGetSummaryParams {
	return &CartGetSummaryParams{
		HTTPClient: client,
	}
}

/*
CartGetSummaryParams contains all the parameters to send to the API endpoint

	for the cart get summary operation.

	Typically these are written to a http.Request.
*/
type CartGetSummaryParams struct {

	/* MessageTypes.

	   A comma delimited list of valid message type ids (/ReferenceData/PricingRuleMessageTypes)
	*/
	MessageTypes *string

	/* SavedCart.

	   Pass True if Checkout has already been called for the cart.
	*/
	SavedCart *string

	// SessionKey.
	SessionKey string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the cart get summary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CartGetSummaryParams) WithDefaults() *CartGetSummaryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the cart get summary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CartGetSummaryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the cart get summary params
func (o *CartGetSummaryParams) WithTimeout(timeout time.Duration) *CartGetSummaryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the cart get summary params
func (o *CartGetSummaryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the cart get summary params
func (o *CartGetSummaryParams) WithContext(ctx context.Context) *CartGetSummaryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the cart get summary params
func (o *CartGetSummaryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the cart get summary params
func (o *CartGetSummaryParams) WithHTTPClient(client *http.Client) *CartGetSummaryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the cart get summary params
func (o *CartGetSummaryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMessageTypes adds the messageTypes to the cart get summary params
func (o *CartGetSummaryParams) WithMessageTypes(messageTypes *string) *CartGetSummaryParams {
	o.SetMessageTypes(messageTypes)
	return o
}

// SetMessageTypes adds the messageTypes to the cart get summary params
func (o *CartGetSummaryParams) SetMessageTypes(messageTypes *string) {
	o.MessageTypes = messageTypes
}

// WithSavedCart adds the savedCart to the cart get summary params
func (o *CartGetSummaryParams) WithSavedCart(savedCart *string) *CartGetSummaryParams {
	o.SetSavedCart(savedCart)
	return o
}

// SetSavedCart adds the savedCart to the cart get summary params
func (o *CartGetSummaryParams) SetSavedCart(savedCart *string) {
	o.SavedCart = savedCart
}

// WithSessionKey adds the sessionKey to the cart get summary params
func (o *CartGetSummaryParams) WithSessionKey(sessionKey string) *CartGetSummaryParams {
	o.SetSessionKey(sessionKey)
	return o
}

// SetSessionKey adds the sessionKey to the cart get summary params
func (o *CartGetSummaryParams) SetSessionKey(sessionKey string) {
	o.SessionKey = sessionKey
}

// WriteToRequest writes these params to a swagger request
func (o *CartGetSummaryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.MessageTypes != nil {

		// query param messageTypes
		var qrMessageTypes string

		if o.MessageTypes != nil {
			qrMessageTypes = *o.MessageTypes
		}
		qMessageTypes := qrMessageTypes
		if qMessageTypes != "" {

			if err := r.SetQueryParam("messageTypes", qMessageTypes); err != nil {
				return err
			}
		}
	}

	if o.SavedCart != nil {

		// query param savedCart
		var qrSavedCart string

		if o.SavedCart != nil {
			qrSavedCart = *o.SavedCart
		}
		qSavedCart := qrSavedCart
		if qSavedCart != "" {

			if err := r.SetQueryParam("savedCart", qSavedCart); err != nil {
				return err
			}
		}
	}

	// path param sessionKey
	if err := r.SetPathParam("sessionKey", o.SessionKey); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
