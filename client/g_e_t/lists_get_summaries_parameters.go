// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewListsGetSummariesParams creates a new ListsGetSummariesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListsGetSummariesParams() *ListsGetSummariesParams {
	return &ListsGetSummariesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListsGetSummariesParamsWithTimeout creates a new ListsGetSummariesParams object
// with the ability to set a timeout on a request.
func NewListsGetSummariesParamsWithTimeout(timeout time.Duration) *ListsGetSummariesParams {
	return &ListsGetSummariesParams{
		timeout: timeout,
	}
}

// NewListsGetSummariesParamsWithContext creates a new ListsGetSummariesParams object
// with the ability to set a context for a request.
func NewListsGetSummariesParamsWithContext(ctx context.Context) *ListsGetSummariesParams {
	return &ListsGetSummariesParams{
		Context: ctx,
	}
}

// NewListsGetSummariesParamsWithHTTPClient creates a new ListsGetSummariesParams object
// with the ability to set a custom HTTPClient for a request.
func NewListsGetSummariesParamsWithHTTPClient(client *http.Client) *ListsGetSummariesParams {
	return &ListsGetSummariesParams{
		HTTPClient: client,
	}
}

/*
ListsGetSummariesParams contains all the parameters to send to the API endpoint

	for the lists get summaries operation.

	Typically these are written to a http.Request.
*/
type ListsGetSummariesParams struct {

	/* ListIds.

	   An optional list of ids
	*/
	ListIds *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the lists get summaries params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListsGetSummariesParams) WithDefaults() *ListsGetSummariesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the lists get summaries params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListsGetSummariesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the lists get summaries params
func (o *ListsGetSummariesParams) WithTimeout(timeout time.Duration) *ListsGetSummariesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the lists get summaries params
func (o *ListsGetSummariesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the lists get summaries params
func (o *ListsGetSummariesParams) WithContext(ctx context.Context) *ListsGetSummariesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the lists get summaries params
func (o *ListsGetSummariesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the lists get summaries params
func (o *ListsGetSummariesParams) WithHTTPClient(client *http.Client) *ListsGetSummariesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the lists get summaries params
func (o *ListsGetSummariesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithListIds adds the listIds to the lists get summaries params
func (o *ListsGetSummariesParams) WithListIds(listIds *string) *ListsGetSummariesParams {
	o.SetListIds(listIds)
	return o
}

// SetListIds adds the listIds to the lists get summaries params
func (o *ListsGetSummariesParams) SetListIds(listIds *string) {
	o.ListIds = listIds
}

// WriteToRequest writes these params to a swagger request
func (o *ListsGetSummariesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ListIds != nil {

		// query param listIds
		var qrListIds string

		if o.ListIds != nil {
			qrListIds = *o.ListIds
		}
		qListIds := qrListIds
		if qListIds != "" {

			if err := r.SetQueryParam("listIds", qListIds); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
