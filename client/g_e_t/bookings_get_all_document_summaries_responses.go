// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// BookingsGetAllDocumentSummariesReader is a Reader for the BookingsGetAllDocumentSummaries structure.
type BookingsGetAllDocumentSummariesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BookingsGetAllDocumentSummariesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBookingsGetAllDocumentSummariesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewBookingsGetAllDocumentSummariesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewBookingsGetAllDocumentSummariesOK creates a BookingsGetAllDocumentSummariesOK with default headers values
func NewBookingsGetAllDocumentSummariesOK() *BookingsGetAllDocumentSummariesOK {
	return &BookingsGetAllDocumentSummariesOK{}
}

/*
BookingsGetAllDocumentSummariesOK describes a response with status code 200, with default header values.

OK
*/
type BookingsGetAllDocumentSummariesOK struct {
	Payload []*models.DocumentSummary
}

// IsSuccess returns true when this bookings get all document summaries o k response has a 2xx status code
func (o *BookingsGetAllDocumentSummariesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this bookings get all document summaries o k response has a 3xx status code
func (o *BookingsGetAllDocumentSummariesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bookings get all document summaries o k response has a 4xx status code
func (o *BookingsGetAllDocumentSummariesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this bookings get all document summaries o k response has a 5xx status code
func (o *BookingsGetAllDocumentSummariesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this bookings get all document summaries o k response a status code equal to that given
func (o *BookingsGetAllDocumentSummariesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the bookings get all document summaries o k response
func (o *BookingsGetAllDocumentSummariesOK) Code() int {
	return 200
}

func (o *BookingsGetAllDocumentSummariesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /EventsManagement/Bookings/{bookingId}/Documents/Summary][%d] bookingsGetAllDocumentSummariesOK %s", 200, payload)
}

func (o *BookingsGetAllDocumentSummariesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /EventsManagement/Bookings/{bookingId}/Documents/Summary][%d] bookingsGetAllDocumentSummariesOK %s", 200, payload)
}

func (o *BookingsGetAllDocumentSummariesOK) GetPayload() []*models.DocumentSummary {
	return o.Payload
}

func (o *BookingsGetAllDocumentSummariesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBookingsGetAllDocumentSummariesDefault creates a BookingsGetAllDocumentSummariesDefault with default headers values
func NewBookingsGetAllDocumentSummariesDefault(code int) *BookingsGetAllDocumentSummariesDefault {
	return &BookingsGetAllDocumentSummariesDefault{
		_statusCode: code,
	}
}

/*
BookingsGetAllDocumentSummariesDefault describes a response with status code -1, with default header values.

Error
*/
type BookingsGetAllDocumentSummariesDefault struct {
	_statusCode int

	Payload *models.ErrorMessage
}

// IsSuccess returns true when this bookings get all document summaries default response has a 2xx status code
func (o *BookingsGetAllDocumentSummariesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this bookings get all document summaries default response has a 3xx status code
func (o *BookingsGetAllDocumentSummariesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this bookings get all document summaries default response has a 4xx status code
func (o *BookingsGetAllDocumentSummariesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this bookings get all document summaries default response has a 5xx status code
func (o *BookingsGetAllDocumentSummariesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this bookings get all document summaries default response a status code equal to that given
func (o *BookingsGetAllDocumentSummariesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the bookings get all document summaries default response
func (o *BookingsGetAllDocumentSummariesDefault) Code() int {
	return o._statusCode
}

func (o *BookingsGetAllDocumentSummariesDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /EventsManagement/Bookings/{bookingId}/Documents/Summary][%d] Bookings_GetAllDocumentSummaries default %s", o._statusCode, payload)
}

func (o *BookingsGetAllDocumentSummariesDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /EventsManagement/Bookings/{bookingId}/Documents/Summary][%d] Bookings_GetAllDocumentSummaries default %s", o._statusCode, payload)
}

func (o *BookingsGetAllDocumentSummariesDefault) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *BookingsGetAllDocumentSummariesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
