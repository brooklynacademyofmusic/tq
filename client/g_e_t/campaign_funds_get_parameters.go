// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCampaignFundsGetParams creates a new CampaignFundsGetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCampaignFundsGetParams() *CampaignFundsGetParams {
	return &CampaignFundsGetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCampaignFundsGetParamsWithTimeout creates a new CampaignFundsGetParams object
// with the ability to set a timeout on a request.
func NewCampaignFundsGetParamsWithTimeout(timeout time.Duration) *CampaignFundsGetParams {
	return &CampaignFundsGetParams{
		timeout: timeout,
	}
}

// NewCampaignFundsGetParamsWithContext creates a new CampaignFundsGetParams object
// with the ability to set a context for a request.
func NewCampaignFundsGetParamsWithContext(ctx context.Context) *CampaignFundsGetParams {
	return &CampaignFundsGetParams{
		Context: ctx,
	}
}

// NewCampaignFundsGetParamsWithHTTPClient creates a new CampaignFundsGetParams object
// with the ability to set a custom HTTPClient for a request.
func NewCampaignFundsGetParamsWithHTTPClient(client *http.Client) *CampaignFundsGetParams {
	return &CampaignFundsGetParams{
		HTTPClient: client,
	}
}

/*
CampaignFundsGetParams contains all the parameters to send to the API endpoint

	for the campaign funds get operation.

	Typically these are written to a http.Request.
*/
type CampaignFundsGetParams struct {

	// CampaignFundID.
	CampaignFundID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the campaign funds get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CampaignFundsGetParams) WithDefaults() *CampaignFundsGetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the campaign funds get params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CampaignFundsGetParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the campaign funds get params
func (o *CampaignFundsGetParams) WithTimeout(timeout time.Duration) *CampaignFundsGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the campaign funds get params
func (o *CampaignFundsGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the campaign funds get params
func (o *CampaignFundsGetParams) WithContext(ctx context.Context) *CampaignFundsGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the campaign funds get params
func (o *CampaignFundsGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the campaign funds get params
func (o *CampaignFundsGetParams) WithHTTPClient(client *http.Client) *CampaignFundsGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the campaign funds get params
func (o *CampaignFundsGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCampaignFundID adds the campaignFundID to the campaign funds get params
func (o *CampaignFundsGetParams) WithCampaignFundID(campaignFundID string) *CampaignFundsGetParams {
	o.SetCampaignFundID(campaignFundID)
	return o
}

// SetCampaignFundID adds the campaignFundId to the campaign funds get params
func (o *CampaignFundsGetParams) SetCampaignFundID(campaignFundID string) {
	o.CampaignFundID = campaignFundID
}

// WriteToRequest writes these params to a swagger request
func (o *CampaignFundsGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param campaignFundId
	if err := r.SetPathParam("campaignFundId", o.CampaignFundID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
