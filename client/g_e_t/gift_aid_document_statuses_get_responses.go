// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// GiftAidDocumentStatusesGetReader is a Reader for the GiftAidDocumentStatusesGet structure.
type GiftAidDocumentStatusesGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GiftAidDocumentStatusesGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGiftAidDocumentStatusesGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGiftAidDocumentStatusesGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGiftAidDocumentStatusesGetOK creates a GiftAidDocumentStatusesGetOK with default headers values
func NewGiftAidDocumentStatusesGetOK() *GiftAidDocumentStatusesGetOK {
	return &GiftAidDocumentStatusesGetOK{}
}

/*
GiftAidDocumentStatusesGetOK describes a response with status code 200, with default header values.

OK
*/
type GiftAidDocumentStatusesGetOK struct {
	Payload *models.GiftAidDocumentStatus
}

// IsSuccess returns true when this gift aid document statuses get o k response has a 2xx status code
func (o *GiftAidDocumentStatusesGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this gift aid document statuses get o k response has a 3xx status code
func (o *GiftAidDocumentStatusesGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this gift aid document statuses get o k response has a 4xx status code
func (o *GiftAidDocumentStatusesGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this gift aid document statuses get o k response has a 5xx status code
func (o *GiftAidDocumentStatusesGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this gift aid document statuses get o k response a status code equal to that given
func (o *GiftAidDocumentStatusesGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the gift aid document statuses get o k response
func (o *GiftAidDocumentStatusesGetOK) Code() int {
	return 200
}

func (o *GiftAidDocumentStatusesGetOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ReferenceData/GiftAidDocumentStatuses/{id}][%d] giftAidDocumentStatusesGetOK %s", 200, payload)
}

func (o *GiftAidDocumentStatusesGetOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ReferenceData/GiftAidDocumentStatuses/{id}][%d] giftAidDocumentStatusesGetOK %s", 200, payload)
}

func (o *GiftAidDocumentStatusesGetOK) GetPayload() *models.GiftAidDocumentStatus {
	return o.Payload
}

func (o *GiftAidDocumentStatusesGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GiftAidDocumentStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGiftAidDocumentStatusesGetDefault creates a GiftAidDocumentStatusesGetDefault with default headers values
func NewGiftAidDocumentStatusesGetDefault(code int) *GiftAidDocumentStatusesGetDefault {
	return &GiftAidDocumentStatusesGetDefault{
		_statusCode: code,
	}
}

/*
GiftAidDocumentStatusesGetDefault describes a response with status code -1, with default header values.

Error
*/
type GiftAidDocumentStatusesGetDefault struct {
	_statusCode int

	Payload *models.ErrorMessage
}

// IsSuccess returns true when this gift aid document statuses get default response has a 2xx status code
func (o *GiftAidDocumentStatusesGetDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this gift aid document statuses get default response has a 3xx status code
func (o *GiftAidDocumentStatusesGetDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this gift aid document statuses get default response has a 4xx status code
func (o *GiftAidDocumentStatusesGetDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this gift aid document statuses get default response has a 5xx status code
func (o *GiftAidDocumentStatusesGetDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this gift aid document statuses get default response a status code equal to that given
func (o *GiftAidDocumentStatusesGetDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the gift aid document statuses get default response
func (o *GiftAidDocumentStatusesGetDefault) Code() int {
	return o._statusCode
}

func (o *GiftAidDocumentStatusesGetDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ReferenceData/GiftAidDocumentStatuses/{id}][%d] GiftAidDocumentStatuses_Get default %s", o._statusCode, payload)
}

func (o *GiftAidDocumentStatusesGetDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /ReferenceData/GiftAidDocumentStatuses/{id}][%d] GiftAidDocumentStatuses_Get default %s", o._statusCode, payload)
}

func (o *GiftAidDocumentStatusesGetDefault) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *GiftAidDocumentStatusesGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
