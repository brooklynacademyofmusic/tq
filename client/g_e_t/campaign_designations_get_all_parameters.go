// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCampaignDesignationsGetAllParams creates a new CampaignDesignationsGetAllParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCampaignDesignationsGetAllParams() *CampaignDesignationsGetAllParams {
	return &CampaignDesignationsGetAllParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCampaignDesignationsGetAllParamsWithTimeout creates a new CampaignDesignationsGetAllParams object
// with the ability to set a timeout on a request.
func NewCampaignDesignationsGetAllParamsWithTimeout(timeout time.Duration) *CampaignDesignationsGetAllParams {
	return &CampaignDesignationsGetAllParams{
		timeout: timeout,
	}
}

// NewCampaignDesignationsGetAllParamsWithContext creates a new CampaignDesignationsGetAllParams object
// with the ability to set a context for a request.
func NewCampaignDesignationsGetAllParamsWithContext(ctx context.Context) *CampaignDesignationsGetAllParams {
	return &CampaignDesignationsGetAllParams{
		Context: ctx,
	}
}

// NewCampaignDesignationsGetAllParamsWithHTTPClient creates a new CampaignDesignationsGetAllParams object
// with the ability to set a custom HTTPClient for a request.
func NewCampaignDesignationsGetAllParamsWithHTTPClient(client *http.Client) *CampaignDesignationsGetAllParams {
	return &CampaignDesignationsGetAllParams{
		HTTPClient: client,
	}
}

/*
CampaignDesignationsGetAllParams contains all the parameters to send to the API endpoint

	for the campaign designations get all operation.

	Typically these are written to a http.Request.
*/
type CampaignDesignationsGetAllParams struct {

	// CampaignID.
	CampaignID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the campaign designations get all params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CampaignDesignationsGetAllParams) WithDefaults() *CampaignDesignationsGetAllParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the campaign designations get all params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CampaignDesignationsGetAllParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the campaign designations get all params
func (o *CampaignDesignationsGetAllParams) WithTimeout(timeout time.Duration) *CampaignDesignationsGetAllParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the campaign designations get all params
func (o *CampaignDesignationsGetAllParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the campaign designations get all params
func (o *CampaignDesignationsGetAllParams) WithContext(ctx context.Context) *CampaignDesignationsGetAllParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the campaign designations get all params
func (o *CampaignDesignationsGetAllParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the campaign designations get all params
func (o *CampaignDesignationsGetAllParams) WithHTTPClient(client *http.Client) *CampaignDesignationsGetAllParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the campaign designations get all params
func (o *CampaignDesignationsGetAllParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCampaignID adds the campaignID to the campaign designations get all params
func (o *CampaignDesignationsGetAllParams) WithCampaignID(campaignID *string) *CampaignDesignationsGetAllParams {
	o.SetCampaignID(campaignID)
	return o
}

// SetCampaignID adds the campaignId to the campaign designations get all params
func (o *CampaignDesignationsGetAllParams) SetCampaignID(campaignID *string) {
	o.CampaignID = campaignID
}

// WriteToRequest writes these params to a swagger request
func (o *CampaignDesignationsGetAllParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CampaignID != nil {

		// query param campaignId
		var qrCampaignID string

		if o.CampaignID != nil {
			qrCampaignID = *o.CampaignID
		}
		qCampaignID := qrCampaignID
		if qCampaignID != "" {

			if err := r.SetQueryParam("campaignId", qCampaignID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
