// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPerformancePriceTypesGetAllParams creates a new PerformancePriceTypesGetAllParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPerformancePriceTypesGetAllParams() *PerformancePriceTypesGetAllParams {
	return &PerformancePriceTypesGetAllParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPerformancePriceTypesGetAllParamsWithTimeout creates a new PerformancePriceTypesGetAllParams object
// with the ability to set a timeout on a request.
func NewPerformancePriceTypesGetAllParamsWithTimeout(timeout time.Duration) *PerformancePriceTypesGetAllParams {
	return &PerformancePriceTypesGetAllParams{
		timeout: timeout,
	}
}

// NewPerformancePriceTypesGetAllParamsWithContext creates a new PerformancePriceTypesGetAllParams object
// with the ability to set a context for a request.
func NewPerformancePriceTypesGetAllParamsWithContext(ctx context.Context) *PerformancePriceTypesGetAllParams {
	return &PerformancePriceTypesGetAllParams{
		Context: ctx,
	}
}

// NewPerformancePriceTypesGetAllParamsWithHTTPClient creates a new PerformancePriceTypesGetAllParams object
// with the ability to set a custom HTTPClient for a request.
func NewPerformancePriceTypesGetAllParamsWithHTTPClient(client *http.Client) *PerformancePriceTypesGetAllParams {
	return &PerformancePriceTypesGetAllParams{
		HTTPClient: client,
	}
}

/*
PerformancePriceTypesGetAllParams contains all the parameters to send to the API endpoint

	for the performance price types get all operation.

	Typically these are written to a http.Request.
*/
type PerformancePriceTypesGetAllParams struct {

	// AsOfDateTime.
	AsOfDateTime *string

	// PerformanceIds.
	PerformanceIds *string

	// PriceTypeIds.
	PriceTypeIds *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the performance price types get all params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PerformancePriceTypesGetAllParams) WithDefaults() *PerformancePriceTypesGetAllParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the performance price types get all params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PerformancePriceTypesGetAllParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the performance price types get all params
func (o *PerformancePriceTypesGetAllParams) WithTimeout(timeout time.Duration) *PerformancePriceTypesGetAllParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the performance price types get all params
func (o *PerformancePriceTypesGetAllParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the performance price types get all params
func (o *PerformancePriceTypesGetAllParams) WithContext(ctx context.Context) *PerformancePriceTypesGetAllParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the performance price types get all params
func (o *PerformancePriceTypesGetAllParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the performance price types get all params
func (o *PerformancePriceTypesGetAllParams) WithHTTPClient(client *http.Client) *PerformancePriceTypesGetAllParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the performance price types get all params
func (o *PerformancePriceTypesGetAllParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAsOfDateTime adds the asOfDateTime to the performance price types get all params
func (o *PerformancePriceTypesGetAllParams) WithAsOfDateTime(asOfDateTime *string) *PerformancePriceTypesGetAllParams {
	o.SetAsOfDateTime(asOfDateTime)
	return o
}

// SetAsOfDateTime adds the asOfDateTime to the performance price types get all params
func (o *PerformancePriceTypesGetAllParams) SetAsOfDateTime(asOfDateTime *string) {
	o.AsOfDateTime = asOfDateTime
}

// WithPerformanceIds adds the performanceIds to the performance price types get all params
func (o *PerformancePriceTypesGetAllParams) WithPerformanceIds(performanceIds *string) *PerformancePriceTypesGetAllParams {
	o.SetPerformanceIds(performanceIds)
	return o
}

// SetPerformanceIds adds the performanceIds to the performance price types get all params
func (o *PerformancePriceTypesGetAllParams) SetPerformanceIds(performanceIds *string) {
	o.PerformanceIds = performanceIds
}

// WithPriceTypeIds adds the priceTypeIds to the performance price types get all params
func (o *PerformancePriceTypesGetAllParams) WithPriceTypeIds(priceTypeIds *string) *PerformancePriceTypesGetAllParams {
	o.SetPriceTypeIds(priceTypeIds)
	return o
}

// SetPriceTypeIds adds the priceTypeIds to the performance price types get all params
func (o *PerformancePriceTypesGetAllParams) SetPriceTypeIds(priceTypeIds *string) {
	o.PriceTypeIds = priceTypeIds
}

// WriteToRequest writes these params to a swagger request
func (o *PerformancePriceTypesGetAllParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AsOfDateTime != nil {

		// query param asOfDateTime
		var qrAsOfDateTime string

		if o.AsOfDateTime != nil {
			qrAsOfDateTime = *o.AsOfDateTime
		}
		qAsOfDateTime := qrAsOfDateTime
		if qAsOfDateTime != "" {

			if err := r.SetQueryParam("asOfDateTime", qAsOfDateTime); err != nil {
				return err
			}
		}
	}

	if o.PerformanceIds != nil {

		// query param performanceIds
		var qrPerformanceIds string

		if o.PerformanceIds != nil {
			qrPerformanceIds = *o.PerformanceIds
		}
		qPerformanceIds := qrPerformanceIds
		if qPerformanceIds != "" {

			if err := r.SetQueryParam("performanceIds", qPerformanceIds); err != nil {
				return err
			}
		}
	}

	if o.PriceTypeIds != nil {

		// query param priceTypeIds
		var qrPriceTypeIds string

		if o.PriceTypeIds != nil {
			qrPriceTypeIds = *o.PriceTypeIds
		}
		qPriceTypeIds := qrPriceTypeIds
		if qPriceTypeIds != "" {

			if err := r.SetQueryParam("priceTypeIds", qPriceTypeIds); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
