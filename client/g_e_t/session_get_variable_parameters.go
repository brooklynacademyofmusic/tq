// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewSessionGetVariableParams creates a new SessionGetVariableParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSessionGetVariableParams() *SessionGetVariableParams {
	return &SessionGetVariableParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSessionGetVariableParamsWithTimeout creates a new SessionGetVariableParams object
// with the ability to set a timeout on a request.
func NewSessionGetVariableParamsWithTimeout(timeout time.Duration) *SessionGetVariableParams {
	return &SessionGetVariableParams{
		timeout: timeout,
	}
}

// NewSessionGetVariableParamsWithContext creates a new SessionGetVariableParams object
// with the ability to set a context for a request.
func NewSessionGetVariableParamsWithContext(ctx context.Context) *SessionGetVariableParams {
	return &SessionGetVariableParams{
		Context: ctx,
	}
}

// NewSessionGetVariableParamsWithHTTPClient creates a new SessionGetVariableParams object
// with the ability to set a custom HTTPClient for a request.
func NewSessionGetVariableParamsWithHTTPClient(client *http.Client) *SessionGetVariableParams {
	return &SessionGetVariableParams{
		HTTPClient: client,
	}
}

/*
SessionGetVariableParams contains all the parameters to send to the API endpoint

	for the session get variable operation.

	Typically these are written to a http.Request.
*/
type SessionGetVariableParams struct {

	// SessionKey.
	SessionKey string

	// VariableName.
	VariableName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the session get variable params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SessionGetVariableParams) WithDefaults() *SessionGetVariableParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the session get variable params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SessionGetVariableParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the session get variable params
func (o *SessionGetVariableParams) WithTimeout(timeout time.Duration) *SessionGetVariableParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the session get variable params
func (o *SessionGetVariableParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the session get variable params
func (o *SessionGetVariableParams) WithContext(ctx context.Context) *SessionGetVariableParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the session get variable params
func (o *SessionGetVariableParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the session get variable params
func (o *SessionGetVariableParams) WithHTTPClient(client *http.Client) *SessionGetVariableParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the session get variable params
func (o *SessionGetVariableParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSessionKey adds the sessionKey to the session get variable params
func (o *SessionGetVariableParams) WithSessionKey(sessionKey string) *SessionGetVariableParams {
	o.SetSessionKey(sessionKey)
	return o
}

// SetSessionKey adds the sessionKey to the session get variable params
func (o *SessionGetVariableParams) SetSessionKey(sessionKey string) {
	o.SessionKey = sessionKey
}

// WithVariableName adds the variableName to the session get variable params
func (o *SessionGetVariableParams) WithVariableName(variableName string) *SessionGetVariableParams {
	o.SetVariableName(variableName)
	return o
}

// SetVariableName adds the variableName to the session get variable params
func (o *SessionGetVariableParams) SetVariableName(variableName string) {
	o.VariableName = variableName
}

// WriteToRequest writes these params to a swagger request
func (o *SessionGetVariableParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param sessionKey
	if err := r.SetPathParam("sessionKey", o.SessionKey); err != nil {
		return err
	}

	// path param variableName
	if err := r.SetPathParam("variableName", o.VariableName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
