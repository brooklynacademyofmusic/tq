// Code generated by go-swagger; DO NOT EDIT.

package g_e_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewSubLineItemsGetSubLineItemSummariesParams creates a new SubLineItemsGetSubLineItemSummariesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSubLineItemsGetSubLineItemSummariesParams() *SubLineItemsGetSubLineItemSummariesParams {
	return &SubLineItemsGetSubLineItemSummariesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSubLineItemsGetSubLineItemSummariesParamsWithTimeout creates a new SubLineItemsGetSubLineItemSummariesParams object
// with the ability to set a timeout on a request.
func NewSubLineItemsGetSubLineItemSummariesParamsWithTimeout(timeout time.Duration) *SubLineItemsGetSubLineItemSummariesParams {
	return &SubLineItemsGetSubLineItemSummariesParams{
		timeout: timeout,
	}
}

// NewSubLineItemsGetSubLineItemSummariesParamsWithContext creates a new SubLineItemsGetSubLineItemSummariesParams object
// with the ability to set a context for a request.
func NewSubLineItemsGetSubLineItemSummariesParamsWithContext(ctx context.Context) *SubLineItemsGetSubLineItemSummariesParams {
	return &SubLineItemsGetSubLineItemSummariesParams{
		Context: ctx,
	}
}

// NewSubLineItemsGetSubLineItemSummariesParamsWithHTTPClient creates a new SubLineItemsGetSubLineItemSummariesParams object
// with the ability to set a custom HTTPClient for a request.
func NewSubLineItemsGetSubLineItemSummariesParamsWithHTTPClient(client *http.Client) *SubLineItemsGetSubLineItemSummariesParams {
	return &SubLineItemsGetSubLineItemSummariesParams{
		HTTPClient: client,
	}
}

/*
SubLineItemsGetSubLineItemSummariesParams contains all the parameters to send to the API endpoint

	for the sub line items get sub line item summaries operation.

	Typically these are written to a http.Request.
*/
type SubLineItemsGetSubLineItemSummariesParams struct {

	/* ConstituentID.

	   The constituent for whom to return sublineitems. Required.
	*/
	ConstituentID *string

	/* IncludeAffiliations.

	   Include all of the constituent's affiliates in the results (default: true)
	*/
	IncludeAffiliations *string

	/* IncludePackageBaseSubLineitems.

	   Optional parameter to suppress base sublineitems for fixed seat packages (default: true)
	*/
	IncludePackageBaseSubLineitems *string

	/* OrderEndDate.

	   Optional End date of the order date range to search
	*/
	OrderEndDate *string

	/* OrderID.

	   Optional parameter to limit the sublineitems to a single order.
	*/
	OrderID *string

	/* OrderStartDate.

	   Optional Start date of the order date range to search
	*/
	OrderStartDate *string

	/* PerformanceEndDate.

	   Optional End date of the performance date range to search.
	*/
	PerformanceEndDate *string

	/* PerformanceStartDate.

	   Optional Start date of the performance date range to search
	*/
	PerformanceStartDate *string

	/* PerformanceTypeIds.

	   A comma separated list of Ids from ReferenceData/PerformanceTypes
	*/
	PerformanceTypeIds *string

	/* SubLineItemStatusIds.

	   Optional parameter to limit the status of the sublineitems returned. Comma separated list of Ids from /ReferenceData/SubLineItemStatuses.
	*/
	SubLineItemStatusIds *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the sub line items get sub line item summaries params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SubLineItemsGetSubLineItemSummariesParams) WithDefaults() *SubLineItemsGetSubLineItemSummariesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the sub line items get sub line item summaries params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SubLineItemsGetSubLineItemSummariesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) WithTimeout(timeout time.Duration) *SubLineItemsGetSubLineItemSummariesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) WithContext(ctx context.Context) *SubLineItemsGetSubLineItemSummariesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) WithHTTPClient(client *http.Client) *SubLineItemsGetSubLineItemSummariesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConstituentID adds the constituentID to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) WithConstituentID(constituentID *string) *SubLineItemsGetSubLineItemSummariesParams {
	o.SetConstituentID(constituentID)
	return o
}

// SetConstituentID adds the constituentId to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) SetConstituentID(constituentID *string) {
	o.ConstituentID = constituentID
}

// WithIncludeAffiliations adds the includeAffiliations to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) WithIncludeAffiliations(includeAffiliations *string) *SubLineItemsGetSubLineItemSummariesParams {
	o.SetIncludeAffiliations(includeAffiliations)
	return o
}

// SetIncludeAffiliations adds the includeAffiliations to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) SetIncludeAffiliations(includeAffiliations *string) {
	o.IncludeAffiliations = includeAffiliations
}

// WithIncludePackageBaseSubLineitems adds the includePackageBaseSubLineitems to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) WithIncludePackageBaseSubLineitems(includePackageBaseSubLineitems *string) *SubLineItemsGetSubLineItemSummariesParams {
	o.SetIncludePackageBaseSubLineitems(includePackageBaseSubLineitems)
	return o
}

// SetIncludePackageBaseSubLineitems adds the includePackageBaseSubLineitems to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) SetIncludePackageBaseSubLineitems(includePackageBaseSubLineitems *string) {
	o.IncludePackageBaseSubLineitems = includePackageBaseSubLineitems
}

// WithOrderEndDate adds the orderEndDate to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) WithOrderEndDate(orderEndDate *string) *SubLineItemsGetSubLineItemSummariesParams {
	o.SetOrderEndDate(orderEndDate)
	return o
}

// SetOrderEndDate adds the orderEndDate to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) SetOrderEndDate(orderEndDate *string) {
	o.OrderEndDate = orderEndDate
}

// WithOrderID adds the orderID to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) WithOrderID(orderID *string) *SubLineItemsGetSubLineItemSummariesParams {
	o.SetOrderID(orderID)
	return o
}

// SetOrderID adds the orderId to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) SetOrderID(orderID *string) {
	o.OrderID = orderID
}

// WithOrderStartDate adds the orderStartDate to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) WithOrderStartDate(orderStartDate *string) *SubLineItemsGetSubLineItemSummariesParams {
	o.SetOrderStartDate(orderStartDate)
	return o
}

// SetOrderStartDate adds the orderStartDate to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) SetOrderStartDate(orderStartDate *string) {
	o.OrderStartDate = orderStartDate
}

// WithPerformanceEndDate adds the performanceEndDate to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) WithPerformanceEndDate(performanceEndDate *string) *SubLineItemsGetSubLineItemSummariesParams {
	o.SetPerformanceEndDate(performanceEndDate)
	return o
}

// SetPerformanceEndDate adds the performanceEndDate to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) SetPerformanceEndDate(performanceEndDate *string) {
	o.PerformanceEndDate = performanceEndDate
}

// WithPerformanceStartDate adds the performanceStartDate to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) WithPerformanceStartDate(performanceStartDate *string) *SubLineItemsGetSubLineItemSummariesParams {
	o.SetPerformanceStartDate(performanceStartDate)
	return o
}

// SetPerformanceStartDate adds the performanceStartDate to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) SetPerformanceStartDate(performanceStartDate *string) {
	o.PerformanceStartDate = performanceStartDate
}

// WithPerformanceTypeIds adds the performanceTypeIds to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) WithPerformanceTypeIds(performanceTypeIds *string) *SubLineItemsGetSubLineItemSummariesParams {
	o.SetPerformanceTypeIds(performanceTypeIds)
	return o
}

// SetPerformanceTypeIds adds the performanceTypeIds to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) SetPerformanceTypeIds(performanceTypeIds *string) {
	o.PerformanceTypeIds = performanceTypeIds
}

// WithSubLineItemStatusIds adds the subLineItemStatusIds to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) WithSubLineItemStatusIds(subLineItemStatusIds *string) *SubLineItemsGetSubLineItemSummariesParams {
	o.SetSubLineItemStatusIds(subLineItemStatusIds)
	return o
}

// SetSubLineItemStatusIds adds the subLineItemStatusIds to the sub line items get sub line item summaries params
func (o *SubLineItemsGetSubLineItemSummariesParams) SetSubLineItemStatusIds(subLineItemStatusIds *string) {
	o.SubLineItemStatusIds = subLineItemStatusIds
}

// WriteToRequest writes these params to a swagger request
func (o *SubLineItemsGetSubLineItemSummariesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ConstituentID != nil {

		// query param constituentId
		var qrConstituentID string

		if o.ConstituentID != nil {
			qrConstituentID = *o.ConstituentID
		}
		qConstituentID := qrConstituentID
		if qConstituentID != "" {

			if err := r.SetQueryParam("constituentId", qConstituentID); err != nil {
				return err
			}
		}
	}

	if o.IncludeAffiliations != nil {

		// query param includeAffiliations
		var qrIncludeAffiliations string

		if o.IncludeAffiliations != nil {
			qrIncludeAffiliations = *o.IncludeAffiliations
		}
		qIncludeAffiliations := qrIncludeAffiliations
		if qIncludeAffiliations != "" {

			if err := r.SetQueryParam("includeAffiliations", qIncludeAffiliations); err != nil {
				return err
			}
		}
	}

	if o.IncludePackageBaseSubLineitems != nil {

		// query param includePackageBaseSubLineitems
		var qrIncludePackageBaseSubLineitems string

		if o.IncludePackageBaseSubLineitems != nil {
			qrIncludePackageBaseSubLineitems = *o.IncludePackageBaseSubLineitems
		}
		qIncludePackageBaseSubLineitems := qrIncludePackageBaseSubLineitems
		if qIncludePackageBaseSubLineitems != "" {

			if err := r.SetQueryParam("includePackageBaseSubLineitems", qIncludePackageBaseSubLineitems); err != nil {
				return err
			}
		}
	}

	if o.OrderEndDate != nil {

		// query param orderEndDate
		var qrOrderEndDate string

		if o.OrderEndDate != nil {
			qrOrderEndDate = *o.OrderEndDate
		}
		qOrderEndDate := qrOrderEndDate
		if qOrderEndDate != "" {

			if err := r.SetQueryParam("orderEndDate", qOrderEndDate); err != nil {
				return err
			}
		}
	}

	if o.OrderID != nil {

		// query param orderId
		var qrOrderID string

		if o.OrderID != nil {
			qrOrderID = *o.OrderID
		}
		qOrderID := qrOrderID
		if qOrderID != "" {

			if err := r.SetQueryParam("orderId", qOrderID); err != nil {
				return err
			}
		}
	}

	if o.OrderStartDate != nil {

		// query param orderStartDate
		var qrOrderStartDate string

		if o.OrderStartDate != nil {
			qrOrderStartDate = *o.OrderStartDate
		}
		qOrderStartDate := qrOrderStartDate
		if qOrderStartDate != "" {

			if err := r.SetQueryParam("orderStartDate", qOrderStartDate); err != nil {
				return err
			}
		}
	}

	if o.PerformanceEndDate != nil {

		// query param performanceEndDate
		var qrPerformanceEndDate string

		if o.PerformanceEndDate != nil {
			qrPerformanceEndDate = *o.PerformanceEndDate
		}
		qPerformanceEndDate := qrPerformanceEndDate
		if qPerformanceEndDate != "" {

			if err := r.SetQueryParam("performanceEndDate", qPerformanceEndDate); err != nil {
				return err
			}
		}
	}

	if o.PerformanceStartDate != nil {

		// query param performanceStartDate
		var qrPerformanceStartDate string

		if o.PerformanceStartDate != nil {
			qrPerformanceStartDate = *o.PerformanceStartDate
		}
		qPerformanceStartDate := qrPerformanceStartDate
		if qPerformanceStartDate != "" {

			if err := r.SetQueryParam("performanceStartDate", qPerformanceStartDate); err != nil {
				return err
			}
		}
	}

	if o.PerformanceTypeIds != nil {

		// query param performanceTypeIds
		var qrPerformanceTypeIds string

		if o.PerformanceTypeIds != nil {
			qrPerformanceTypeIds = *o.PerformanceTypeIds
		}
		qPerformanceTypeIds := qrPerformanceTypeIds
		if qPerformanceTypeIds != "" {

			if err := r.SetQueryParam("performanceTypeIds", qPerformanceTypeIds); err != nil {
				return err
			}
		}
	}

	if o.SubLineItemStatusIds != nil {

		// query param subLineItemStatusIds
		var qrSubLineItemStatusIds string

		if o.SubLineItemStatusIds != nil {
			qrSubLineItemStatusIds = *o.SubLineItemStatusIds
		}
		qSubLineItemStatusIds := qrSubLineItemStatusIds
		if qSubLineItemStatusIds != "" {

			if err := r.SetQueryParam("subLineItemStatusIds", qSubLineItemStatusIds); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
