// Code generated by go-swagger; DO NOT EDIT.

package p_u_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// NewCartApplyLineItemDiscountParams creates a new CartApplyLineItemDiscountParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCartApplyLineItemDiscountParams() *CartApplyLineItemDiscountParams {
	return &CartApplyLineItemDiscountParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCartApplyLineItemDiscountParamsWithTimeout creates a new CartApplyLineItemDiscountParams object
// with the ability to set a timeout on a request.
func NewCartApplyLineItemDiscountParamsWithTimeout(timeout time.Duration) *CartApplyLineItemDiscountParams {
	return &CartApplyLineItemDiscountParams{
		timeout: timeout,
	}
}

// NewCartApplyLineItemDiscountParamsWithContext creates a new CartApplyLineItemDiscountParams object
// with the ability to set a context for a request.
func NewCartApplyLineItemDiscountParamsWithContext(ctx context.Context) *CartApplyLineItemDiscountParams {
	return &CartApplyLineItemDiscountParams{
		Context: ctx,
	}
}

// NewCartApplyLineItemDiscountParamsWithHTTPClient creates a new CartApplyLineItemDiscountParams object
// with the ability to set a custom HTTPClient for a request.
func NewCartApplyLineItemDiscountParamsWithHTTPClient(client *http.Client) *CartApplyLineItemDiscountParams {
	return &CartApplyLineItemDiscountParams{
		HTTPClient: client,
	}
}

/*
CartApplyLineItemDiscountParams contains all the parameters to send to the API endpoint

	for the cart apply line item discount operation.

	Typically these are written to a http.Request.
*/
type CartApplyLineItemDiscountParams struct {

	/* LineItemID.

	   The Id of the Lineitem to apply the discount to. Must be a valid lineitem in the cart.
	*/
	LineItemID string

	// Request.
	Request *models.ApplyDiscountRequest

	// SessionKey.
	SessionKey string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the cart apply line item discount params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CartApplyLineItemDiscountParams) WithDefaults() *CartApplyLineItemDiscountParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the cart apply line item discount params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CartApplyLineItemDiscountParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the cart apply line item discount params
func (o *CartApplyLineItemDiscountParams) WithTimeout(timeout time.Duration) *CartApplyLineItemDiscountParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the cart apply line item discount params
func (o *CartApplyLineItemDiscountParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the cart apply line item discount params
func (o *CartApplyLineItemDiscountParams) WithContext(ctx context.Context) *CartApplyLineItemDiscountParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the cart apply line item discount params
func (o *CartApplyLineItemDiscountParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the cart apply line item discount params
func (o *CartApplyLineItemDiscountParams) WithHTTPClient(client *http.Client) *CartApplyLineItemDiscountParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the cart apply line item discount params
func (o *CartApplyLineItemDiscountParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLineItemID adds the lineItemID to the cart apply line item discount params
func (o *CartApplyLineItemDiscountParams) WithLineItemID(lineItemID string) *CartApplyLineItemDiscountParams {
	o.SetLineItemID(lineItemID)
	return o
}

// SetLineItemID adds the lineItemId to the cart apply line item discount params
func (o *CartApplyLineItemDiscountParams) SetLineItemID(lineItemID string) {
	o.LineItemID = lineItemID
}

// WithRequest adds the request to the cart apply line item discount params
func (o *CartApplyLineItemDiscountParams) WithRequest(request *models.ApplyDiscountRequest) *CartApplyLineItemDiscountParams {
	o.SetRequest(request)
	return o
}

// SetRequest adds the request to the cart apply line item discount params
func (o *CartApplyLineItemDiscountParams) SetRequest(request *models.ApplyDiscountRequest) {
	o.Request = request
}

// WithSessionKey adds the sessionKey to the cart apply line item discount params
func (o *CartApplyLineItemDiscountParams) WithSessionKey(sessionKey string) *CartApplyLineItemDiscountParams {
	o.SetSessionKey(sessionKey)
	return o
}

// SetSessionKey adds the sessionKey to the cart apply line item discount params
func (o *CartApplyLineItemDiscountParams) SetSessionKey(sessionKey string) {
	o.SessionKey = sessionKey
}

// WriteToRequest writes these params to a swagger request
func (o *CartApplyLineItemDiscountParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param lineItemId
	if err := r.SetPathParam("lineItemId", o.LineItemID); err != nil {
		return err
	}
	if o.Request != nil {
		if err := r.SetBodyParam(o.Request); err != nil {
			return err
		}
	}

	// path param sessionKey
	if err := r.SetPathParam("sessionKey", o.SessionKey); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
