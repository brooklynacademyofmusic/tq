// Code generated by go-swagger; DO NOT EDIT.

package p_u_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// NewBulkDailyCopyExclusionsUpdateParams creates a new BulkDailyCopyExclusionsUpdateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewBulkDailyCopyExclusionsUpdateParams() *BulkDailyCopyExclusionsUpdateParams {
	return &BulkDailyCopyExclusionsUpdateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewBulkDailyCopyExclusionsUpdateParamsWithTimeout creates a new BulkDailyCopyExclusionsUpdateParams object
// with the ability to set a timeout on a request.
func NewBulkDailyCopyExclusionsUpdateParamsWithTimeout(timeout time.Duration) *BulkDailyCopyExclusionsUpdateParams {
	return &BulkDailyCopyExclusionsUpdateParams{
		timeout: timeout,
	}
}

// NewBulkDailyCopyExclusionsUpdateParamsWithContext creates a new BulkDailyCopyExclusionsUpdateParams object
// with the ability to set a context for a request.
func NewBulkDailyCopyExclusionsUpdateParamsWithContext(ctx context.Context) *BulkDailyCopyExclusionsUpdateParams {
	return &BulkDailyCopyExclusionsUpdateParams{
		Context: ctx,
	}
}

// NewBulkDailyCopyExclusionsUpdateParamsWithHTTPClient creates a new BulkDailyCopyExclusionsUpdateParams object
// with the ability to set a custom HTTPClient for a request.
func NewBulkDailyCopyExclusionsUpdateParamsWithHTTPClient(client *http.Client) *BulkDailyCopyExclusionsUpdateParams {
	return &BulkDailyCopyExclusionsUpdateParams{
		HTTPClient: client,
	}
}

/*
BulkDailyCopyExclusionsUpdateParams contains all the parameters to send to the API endpoint

	for the bulk daily copy exclusions update operation.

	Typically these are written to a http.Request.
*/
type BulkDailyCopyExclusionsUpdateParams struct {

	// BulkDailyCopyExclusion.
	BulkDailyCopyExclusion *models.BulkDailyCopyExclusion

	// BulkDailyCopyExclusionID.
	BulkDailyCopyExclusionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the bulk daily copy exclusions update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *BulkDailyCopyExclusionsUpdateParams) WithDefaults() *BulkDailyCopyExclusionsUpdateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the bulk daily copy exclusions update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *BulkDailyCopyExclusionsUpdateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the bulk daily copy exclusions update params
func (o *BulkDailyCopyExclusionsUpdateParams) WithTimeout(timeout time.Duration) *BulkDailyCopyExclusionsUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the bulk daily copy exclusions update params
func (o *BulkDailyCopyExclusionsUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the bulk daily copy exclusions update params
func (o *BulkDailyCopyExclusionsUpdateParams) WithContext(ctx context.Context) *BulkDailyCopyExclusionsUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the bulk daily copy exclusions update params
func (o *BulkDailyCopyExclusionsUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the bulk daily copy exclusions update params
func (o *BulkDailyCopyExclusionsUpdateParams) WithHTTPClient(client *http.Client) *BulkDailyCopyExclusionsUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the bulk daily copy exclusions update params
func (o *BulkDailyCopyExclusionsUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBulkDailyCopyExclusion adds the bulkDailyCopyExclusion to the bulk daily copy exclusions update params
func (o *BulkDailyCopyExclusionsUpdateParams) WithBulkDailyCopyExclusion(bulkDailyCopyExclusion *models.BulkDailyCopyExclusion) *BulkDailyCopyExclusionsUpdateParams {
	o.SetBulkDailyCopyExclusion(bulkDailyCopyExclusion)
	return o
}

// SetBulkDailyCopyExclusion adds the bulkDailyCopyExclusion to the bulk daily copy exclusions update params
func (o *BulkDailyCopyExclusionsUpdateParams) SetBulkDailyCopyExclusion(bulkDailyCopyExclusion *models.BulkDailyCopyExclusion) {
	o.BulkDailyCopyExclusion = bulkDailyCopyExclusion
}

// WithBulkDailyCopyExclusionID adds the bulkDailyCopyExclusionID to the bulk daily copy exclusions update params
func (o *BulkDailyCopyExclusionsUpdateParams) WithBulkDailyCopyExclusionID(bulkDailyCopyExclusionID string) *BulkDailyCopyExclusionsUpdateParams {
	o.SetBulkDailyCopyExclusionID(bulkDailyCopyExclusionID)
	return o
}

// SetBulkDailyCopyExclusionID adds the bulkDailyCopyExclusionId to the bulk daily copy exclusions update params
func (o *BulkDailyCopyExclusionsUpdateParams) SetBulkDailyCopyExclusionID(bulkDailyCopyExclusionID string) {
	o.BulkDailyCopyExclusionID = bulkDailyCopyExclusionID
}

// WriteToRequest writes these params to a swagger request
func (o *BulkDailyCopyExclusionsUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.BulkDailyCopyExclusion != nil {
		if err := r.SetBodyParam(o.BulkDailyCopyExclusion); err != nil {
			return err
		}
	}

	// path param bulkDailyCopyExclusionId
	if err := r.SetPathParam("bulkDailyCopyExclusionId", o.BulkDailyCopyExclusionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
