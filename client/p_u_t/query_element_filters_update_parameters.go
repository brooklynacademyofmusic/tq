// Code generated by go-swagger; DO NOT EDIT.

package p_u_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// NewQueryElementFiltersUpdateParams creates a new QueryElementFiltersUpdateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewQueryElementFiltersUpdateParams() *QueryElementFiltersUpdateParams {
	return &QueryElementFiltersUpdateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewQueryElementFiltersUpdateParamsWithTimeout creates a new QueryElementFiltersUpdateParams object
// with the ability to set a timeout on a request.
func NewQueryElementFiltersUpdateParamsWithTimeout(timeout time.Duration) *QueryElementFiltersUpdateParams {
	return &QueryElementFiltersUpdateParams{
		timeout: timeout,
	}
}

// NewQueryElementFiltersUpdateParamsWithContext creates a new QueryElementFiltersUpdateParams object
// with the ability to set a context for a request.
func NewQueryElementFiltersUpdateParamsWithContext(ctx context.Context) *QueryElementFiltersUpdateParams {
	return &QueryElementFiltersUpdateParams{
		Context: ctx,
	}
}

// NewQueryElementFiltersUpdateParamsWithHTTPClient creates a new QueryElementFiltersUpdateParams object
// with the ability to set a custom HTTPClient for a request.
func NewQueryElementFiltersUpdateParamsWithHTTPClient(client *http.Client) *QueryElementFiltersUpdateParams {
	return &QueryElementFiltersUpdateParams{
		HTTPClient: client,
	}
}

/*
QueryElementFiltersUpdateParams contains all the parameters to send to the API endpoint

	for the query element filters update operation.

	Typically these are written to a http.Request.
*/
type QueryElementFiltersUpdateParams struct {

	// QueryElementFilter.
	QueryElementFilter *models.QueryElementFilter

	// QueryElementFilterID.
	QueryElementFilterID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the query element filters update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *QueryElementFiltersUpdateParams) WithDefaults() *QueryElementFiltersUpdateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the query element filters update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *QueryElementFiltersUpdateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the query element filters update params
func (o *QueryElementFiltersUpdateParams) WithTimeout(timeout time.Duration) *QueryElementFiltersUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the query element filters update params
func (o *QueryElementFiltersUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the query element filters update params
func (o *QueryElementFiltersUpdateParams) WithContext(ctx context.Context) *QueryElementFiltersUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the query element filters update params
func (o *QueryElementFiltersUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the query element filters update params
func (o *QueryElementFiltersUpdateParams) WithHTTPClient(client *http.Client) *QueryElementFiltersUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the query element filters update params
func (o *QueryElementFiltersUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithQueryElementFilter adds the queryElementFilter to the query element filters update params
func (o *QueryElementFiltersUpdateParams) WithQueryElementFilter(queryElementFilter *models.QueryElementFilter) *QueryElementFiltersUpdateParams {
	o.SetQueryElementFilter(queryElementFilter)
	return o
}

// SetQueryElementFilter adds the queryElementFilter to the query element filters update params
func (o *QueryElementFiltersUpdateParams) SetQueryElementFilter(queryElementFilter *models.QueryElementFilter) {
	o.QueryElementFilter = queryElementFilter
}

// WithQueryElementFilterID adds the queryElementFilterID to the query element filters update params
func (o *QueryElementFiltersUpdateParams) WithQueryElementFilterID(queryElementFilterID string) *QueryElementFiltersUpdateParams {
	o.SetQueryElementFilterID(queryElementFilterID)
	return o
}

// SetQueryElementFilterID adds the queryElementFilterId to the query element filters update params
func (o *QueryElementFiltersUpdateParams) SetQueryElementFilterID(queryElementFilterID string) {
	o.QueryElementFilterID = queryElementFilterID
}

// WriteToRequest writes these params to a swagger request
func (o *QueryElementFiltersUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.QueryElementFilter != nil {
		if err := r.SetBodyParam(o.QueryElementFilter); err != nil {
			return err
		}
	}

	// path param queryElementFilterId
	if err := r.SetPathParam("queryElementFilterId", o.QueryElementFilterID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
