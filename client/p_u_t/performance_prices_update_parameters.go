// Code generated by go-swagger; DO NOT EDIT.

package p_u_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// NewPerformancePricesUpdateParams creates a new PerformancePricesUpdateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPerformancePricesUpdateParams() *PerformancePricesUpdateParams {
	return &PerformancePricesUpdateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPerformancePricesUpdateParamsWithTimeout creates a new PerformancePricesUpdateParams object
// with the ability to set a timeout on a request.
func NewPerformancePricesUpdateParamsWithTimeout(timeout time.Duration) *PerformancePricesUpdateParams {
	return &PerformancePricesUpdateParams{
		timeout: timeout,
	}
}

// NewPerformancePricesUpdateParamsWithContext creates a new PerformancePricesUpdateParams object
// with the ability to set a context for a request.
func NewPerformancePricesUpdateParamsWithContext(ctx context.Context) *PerformancePricesUpdateParams {
	return &PerformancePricesUpdateParams{
		Context: ctx,
	}
}

// NewPerformancePricesUpdateParamsWithHTTPClient creates a new PerformancePricesUpdateParams object
// with the ability to set a custom HTTPClient for a request.
func NewPerformancePricesUpdateParamsWithHTTPClient(client *http.Client) *PerformancePricesUpdateParams {
	return &PerformancePricesUpdateParams{
		HTTPClient: client,
	}
}

/*
PerformancePricesUpdateParams contains all the parameters to send to the API endpoint

	for the performance prices update operation.

	Typically these are written to a http.Request.
*/
type PerformancePricesUpdateParams struct {

	// PerformancePrice.
	PerformancePrice *models.PerformancePrice

	// PerformancePriceID.
	PerformancePriceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the performance prices update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PerformancePricesUpdateParams) WithDefaults() *PerformancePricesUpdateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the performance prices update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PerformancePricesUpdateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the performance prices update params
func (o *PerformancePricesUpdateParams) WithTimeout(timeout time.Duration) *PerformancePricesUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the performance prices update params
func (o *PerformancePricesUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the performance prices update params
func (o *PerformancePricesUpdateParams) WithContext(ctx context.Context) *PerformancePricesUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the performance prices update params
func (o *PerformancePricesUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the performance prices update params
func (o *PerformancePricesUpdateParams) WithHTTPClient(client *http.Client) *PerformancePricesUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the performance prices update params
func (o *PerformancePricesUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPerformancePrice adds the performancePrice to the performance prices update params
func (o *PerformancePricesUpdateParams) WithPerformancePrice(performancePrice *models.PerformancePrice) *PerformancePricesUpdateParams {
	o.SetPerformancePrice(performancePrice)
	return o
}

// SetPerformancePrice adds the performancePrice to the performance prices update params
func (o *PerformancePricesUpdateParams) SetPerformancePrice(performancePrice *models.PerformancePrice) {
	o.PerformancePrice = performancePrice
}

// WithPerformancePriceID adds the performancePriceID to the performance prices update params
func (o *PerformancePricesUpdateParams) WithPerformancePriceID(performancePriceID string) *PerformancePricesUpdateParams {
	o.SetPerformancePriceID(performancePriceID)
	return o
}

// SetPerformancePriceID adds the performancePriceId to the performance prices update params
func (o *PerformancePricesUpdateParams) SetPerformancePriceID(performancePriceID string) {
	o.PerformancePriceID = performancePriceID
}

// WriteToRequest writes these params to a swagger request
func (o *PerformancePricesUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.PerformancePrice != nil {
		if err := r.SetBodyParam(o.PerformancePrice); err != nil {
			return err
		}
	}

	// path param performancePriceId
	if err := r.SetPathParam("performancePriceId", o.PerformancePriceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
