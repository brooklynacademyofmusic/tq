// Code generated by go-swagger; DO NOT EDIT.

package p_u_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// NewContributionsUpdateParams creates a new ContributionsUpdateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewContributionsUpdateParams() *ContributionsUpdateParams {
	return &ContributionsUpdateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewContributionsUpdateParamsWithTimeout creates a new ContributionsUpdateParams object
// with the ability to set a timeout on a request.
func NewContributionsUpdateParamsWithTimeout(timeout time.Duration) *ContributionsUpdateParams {
	return &ContributionsUpdateParams{
		timeout: timeout,
	}
}

// NewContributionsUpdateParamsWithContext creates a new ContributionsUpdateParams object
// with the ability to set a context for a request.
func NewContributionsUpdateParamsWithContext(ctx context.Context) *ContributionsUpdateParams {
	return &ContributionsUpdateParams{
		Context: ctx,
	}
}

// NewContributionsUpdateParamsWithHTTPClient creates a new ContributionsUpdateParams object
// with the ability to set a custom HTTPClient for a request.
func NewContributionsUpdateParamsWithHTTPClient(client *http.Client) *ContributionsUpdateParams {
	return &ContributionsUpdateParams{
		HTTPClient: client,
	}
}

/*
ContributionsUpdateParams contains all the parameters to send to the API endpoint

	for the contributions update operation.

	Typically these are written to a http.Request.
*/
type ContributionsUpdateParams struct {

	/* Contribution.

	   The contribution entity. Only the Id property is provided at this point.
	*/
	Contribution *models.Contribution

	/* ContributionID.

	   Id of the contribution (ref_no)
	*/
	ContributionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the contributions update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ContributionsUpdateParams) WithDefaults() *ContributionsUpdateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the contributions update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ContributionsUpdateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the contributions update params
func (o *ContributionsUpdateParams) WithTimeout(timeout time.Duration) *ContributionsUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the contributions update params
func (o *ContributionsUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the contributions update params
func (o *ContributionsUpdateParams) WithContext(ctx context.Context) *ContributionsUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the contributions update params
func (o *ContributionsUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the contributions update params
func (o *ContributionsUpdateParams) WithHTTPClient(client *http.Client) *ContributionsUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the contributions update params
func (o *ContributionsUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContribution adds the contribution to the contributions update params
func (o *ContributionsUpdateParams) WithContribution(contribution *models.Contribution) *ContributionsUpdateParams {
	o.SetContribution(contribution)
	return o
}

// SetContribution adds the contribution to the contributions update params
func (o *ContributionsUpdateParams) SetContribution(contribution *models.Contribution) {
	o.Contribution = contribution
}

// WithContributionID adds the contributionID to the contributions update params
func (o *ContributionsUpdateParams) WithContributionID(contributionID string) *ContributionsUpdateParams {
	o.SetContributionID(contributionID)
	return o
}

// SetContributionID adds the contributionId to the contributions update params
func (o *ContributionsUpdateParams) SetContributionID(contributionID string) {
	o.ContributionID = contributionID
}

// WriteToRequest writes these params to a swagger request
func (o *ContributionsUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Contribution != nil {
		if err := r.SetBodyParam(o.Contribution); err != nil {
			return err
		}
	}

	// path param contributionId
	if err := r.SetPathParam("contributionId", o.ContributionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
