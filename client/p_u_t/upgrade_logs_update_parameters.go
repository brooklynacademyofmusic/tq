// Code generated by go-swagger; DO NOT EDIT.

package p_u_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// NewUpgradeLogsUpdateParams creates a new UpgradeLogsUpdateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpgradeLogsUpdateParams() *UpgradeLogsUpdateParams {
	return &UpgradeLogsUpdateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpgradeLogsUpdateParamsWithTimeout creates a new UpgradeLogsUpdateParams object
// with the ability to set a timeout on a request.
func NewUpgradeLogsUpdateParamsWithTimeout(timeout time.Duration) *UpgradeLogsUpdateParams {
	return &UpgradeLogsUpdateParams{
		timeout: timeout,
	}
}

// NewUpgradeLogsUpdateParamsWithContext creates a new UpgradeLogsUpdateParams object
// with the ability to set a context for a request.
func NewUpgradeLogsUpdateParamsWithContext(ctx context.Context) *UpgradeLogsUpdateParams {
	return &UpgradeLogsUpdateParams{
		Context: ctx,
	}
}

// NewUpgradeLogsUpdateParamsWithHTTPClient creates a new UpgradeLogsUpdateParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpgradeLogsUpdateParamsWithHTTPClient(client *http.Client) *UpgradeLogsUpdateParams {
	return &UpgradeLogsUpdateParams{
		HTTPClient: client,
	}
}

/*
UpgradeLogsUpdateParams contains all the parameters to send to the API endpoint

	for the upgrade logs update operation.

	Typically these are written to a http.Request.
*/
type UpgradeLogsUpdateParams struct {

	// UpgradeLog.
	UpgradeLog *models.UpgradeLog

	// UpgradeLogID.
	UpgradeLogID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the upgrade logs update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpgradeLogsUpdateParams) WithDefaults() *UpgradeLogsUpdateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the upgrade logs update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpgradeLogsUpdateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the upgrade logs update params
func (o *UpgradeLogsUpdateParams) WithTimeout(timeout time.Duration) *UpgradeLogsUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the upgrade logs update params
func (o *UpgradeLogsUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the upgrade logs update params
func (o *UpgradeLogsUpdateParams) WithContext(ctx context.Context) *UpgradeLogsUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the upgrade logs update params
func (o *UpgradeLogsUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the upgrade logs update params
func (o *UpgradeLogsUpdateParams) WithHTTPClient(client *http.Client) *UpgradeLogsUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the upgrade logs update params
func (o *UpgradeLogsUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUpgradeLog adds the upgradeLog to the upgrade logs update params
func (o *UpgradeLogsUpdateParams) WithUpgradeLog(upgradeLog *models.UpgradeLog) *UpgradeLogsUpdateParams {
	o.SetUpgradeLog(upgradeLog)
	return o
}

// SetUpgradeLog adds the upgradeLog to the upgrade logs update params
func (o *UpgradeLogsUpdateParams) SetUpgradeLog(upgradeLog *models.UpgradeLog) {
	o.UpgradeLog = upgradeLog
}

// WithUpgradeLogID adds the upgradeLogID to the upgrade logs update params
func (o *UpgradeLogsUpdateParams) WithUpgradeLogID(upgradeLogID string) *UpgradeLogsUpdateParams {
	o.SetUpgradeLogID(upgradeLogID)
	return o
}

// SetUpgradeLogID adds the upgradeLogId to the upgrade logs update params
func (o *UpgradeLogsUpdateParams) SetUpgradeLogID(upgradeLogID string) {
	o.UpgradeLogID = upgradeLogID
}

// WriteToRequest writes these params to a swagger request
func (o *UpgradeLogsUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.UpgradeLog != nil {
		if err := r.SetBodyParam(o.UpgradeLog); err != nil {
			return err
		}
	}

	// path param upgradeLogId
	if err := r.SetPathParam("upgradeLogId", o.UpgradeLogID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
