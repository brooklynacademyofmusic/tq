// Code generated by go-swagger; DO NOT EDIT.

package p_u_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// NewPricingRuleSetsUpdateParams creates a new PricingRuleSetsUpdateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPricingRuleSetsUpdateParams() *PricingRuleSetsUpdateParams {
	return &PricingRuleSetsUpdateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPricingRuleSetsUpdateParamsWithTimeout creates a new PricingRuleSetsUpdateParams object
// with the ability to set a timeout on a request.
func NewPricingRuleSetsUpdateParamsWithTimeout(timeout time.Duration) *PricingRuleSetsUpdateParams {
	return &PricingRuleSetsUpdateParams{
		timeout: timeout,
	}
}

// NewPricingRuleSetsUpdateParamsWithContext creates a new PricingRuleSetsUpdateParams object
// with the ability to set a context for a request.
func NewPricingRuleSetsUpdateParamsWithContext(ctx context.Context) *PricingRuleSetsUpdateParams {
	return &PricingRuleSetsUpdateParams{
		Context: ctx,
	}
}

// NewPricingRuleSetsUpdateParamsWithHTTPClient creates a new PricingRuleSetsUpdateParams object
// with the ability to set a custom HTTPClient for a request.
func NewPricingRuleSetsUpdateParamsWithHTTPClient(client *http.Client) *PricingRuleSetsUpdateParams {
	return &PricingRuleSetsUpdateParams{
		HTTPClient: client,
	}
}

/*
PricingRuleSetsUpdateParams contains all the parameters to send to the API endpoint

	for the pricing rule sets update operation.

	Typically these are written to a http.Request.
*/
type PricingRuleSetsUpdateParams struct {

	// PricingRuleSet.
	PricingRuleSet *models.PricingRuleSet

	// PricingRuleSetID.
	PricingRuleSetID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the pricing rule sets update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PricingRuleSetsUpdateParams) WithDefaults() *PricingRuleSetsUpdateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the pricing rule sets update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PricingRuleSetsUpdateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the pricing rule sets update params
func (o *PricingRuleSetsUpdateParams) WithTimeout(timeout time.Duration) *PricingRuleSetsUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the pricing rule sets update params
func (o *PricingRuleSetsUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the pricing rule sets update params
func (o *PricingRuleSetsUpdateParams) WithContext(ctx context.Context) *PricingRuleSetsUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the pricing rule sets update params
func (o *PricingRuleSetsUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the pricing rule sets update params
func (o *PricingRuleSetsUpdateParams) WithHTTPClient(client *http.Client) *PricingRuleSetsUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the pricing rule sets update params
func (o *PricingRuleSetsUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPricingRuleSet adds the pricingRuleSet to the pricing rule sets update params
func (o *PricingRuleSetsUpdateParams) WithPricingRuleSet(pricingRuleSet *models.PricingRuleSet) *PricingRuleSetsUpdateParams {
	o.SetPricingRuleSet(pricingRuleSet)
	return o
}

// SetPricingRuleSet adds the pricingRuleSet to the pricing rule sets update params
func (o *PricingRuleSetsUpdateParams) SetPricingRuleSet(pricingRuleSet *models.PricingRuleSet) {
	o.PricingRuleSet = pricingRuleSet
}

// WithPricingRuleSetID adds the pricingRuleSetID to the pricing rule sets update params
func (o *PricingRuleSetsUpdateParams) WithPricingRuleSetID(pricingRuleSetID string) *PricingRuleSetsUpdateParams {
	o.SetPricingRuleSetID(pricingRuleSetID)
	return o
}

// SetPricingRuleSetID adds the pricingRuleSetId to the pricing rule sets update params
func (o *PricingRuleSetsUpdateParams) SetPricingRuleSetID(pricingRuleSetID string) {
	o.PricingRuleSetID = pricingRuleSetID
}

// WriteToRequest writes these params to a swagger request
func (o *PricingRuleSetsUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.PricingRuleSet != nil {
		if err := r.SetBodyParam(o.PricingRuleSet); err != nil {
			return err
		}
	}

	// path param pricingRuleSetId
	if err := r.SetPathParam("pricingRuleSetId", o.PricingRuleSetID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
