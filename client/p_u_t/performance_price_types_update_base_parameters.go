// Code generated by go-swagger; DO NOT EDIT.

package p_u_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPerformancePriceTypesUpdateBaseParams creates a new PerformancePriceTypesUpdateBaseParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPerformancePriceTypesUpdateBaseParams() *PerformancePriceTypesUpdateBaseParams {
	return &PerformancePriceTypesUpdateBaseParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPerformancePriceTypesUpdateBaseParamsWithTimeout creates a new PerformancePriceTypesUpdateBaseParams object
// with the ability to set a timeout on a request.
func NewPerformancePriceTypesUpdateBaseParamsWithTimeout(timeout time.Duration) *PerformancePriceTypesUpdateBaseParams {
	return &PerformancePriceTypesUpdateBaseParams{
		timeout: timeout,
	}
}

// NewPerformancePriceTypesUpdateBaseParamsWithContext creates a new PerformancePriceTypesUpdateBaseParams object
// with the ability to set a context for a request.
func NewPerformancePriceTypesUpdateBaseParamsWithContext(ctx context.Context) *PerformancePriceTypesUpdateBaseParams {
	return &PerformancePriceTypesUpdateBaseParams{
		Context: ctx,
	}
}

// NewPerformancePriceTypesUpdateBaseParamsWithHTTPClient creates a new PerformancePriceTypesUpdateBaseParams object
// with the ability to set a custom HTTPClient for a request.
func NewPerformancePriceTypesUpdateBaseParamsWithHTTPClient(client *http.Client) *PerformancePriceTypesUpdateBaseParams {
	return &PerformancePriceTypesUpdateBaseParams{
		HTTPClient: client,
	}
}

/*
PerformancePriceTypesUpdateBaseParams contains all the parameters to send to the API endpoint

	for the performance price types update base operation.

	Typically these are written to a http.Request.
*/
type PerformancePriceTypesUpdateBaseParams struct {

	// PerformanceIds.
	PerformanceIds string

	// PriceLayerTypeIds.
	PriceLayerTypeIds *string

	// PriceTypeID.
	PriceTypeID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the performance price types update base params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PerformancePriceTypesUpdateBaseParams) WithDefaults() *PerformancePriceTypesUpdateBaseParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the performance price types update base params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PerformancePriceTypesUpdateBaseParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the performance price types update base params
func (o *PerformancePriceTypesUpdateBaseParams) WithTimeout(timeout time.Duration) *PerformancePriceTypesUpdateBaseParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the performance price types update base params
func (o *PerformancePriceTypesUpdateBaseParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the performance price types update base params
func (o *PerformancePriceTypesUpdateBaseParams) WithContext(ctx context.Context) *PerformancePriceTypesUpdateBaseParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the performance price types update base params
func (o *PerformancePriceTypesUpdateBaseParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the performance price types update base params
func (o *PerformancePriceTypesUpdateBaseParams) WithHTTPClient(client *http.Client) *PerformancePriceTypesUpdateBaseParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the performance price types update base params
func (o *PerformancePriceTypesUpdateBaseParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPerformanceIds adds the performanceIds to the performance price types update base params
func (o *PerformancePriceTypesUpdateBaseParams) WithPerformanceIds(performanceIds string) *PerformancePriceTypesUpdateBaseParams {
	o.SetPerformanceIds(performanceIds)
	return o
}

// SetPerformanceIds adds the performanceIds to the performance price types update base params
func (o *PerformancePriceTypesUpdateBaseParams) SetPerformanceIds(performanceIds string) {
	o.PerformanceIds = performanceIds
}

// WithPriceLayerTypeIds adds the priceLayerTypeIds to the performance price types update base params
func (o *PerformancePriceTypesUpdateBaseParams) WithPriceLayerTypeIds(priceLayerTypeIds *string) *PerformancePriceTypesUpdateBaseParams {
	o.SetPriceLayerTypeIds(priceLayerTypeIds)
	return o
}

// SetPriceLayerTypeIds adds the priceLayerTypeIds to the performance price types update base params
func (o *PerformancePriceTypesUpdateBaseParams) SetPriceLayerTypeIds(priceLayerTypeIds *string) {
	o.PriceLayerTypeIds = priceLayerTypeIds
}

// WithPriceTypeID adds the priceTypeID to the performance price types update base params
func (o *PerformancePriceTypesUpdateBaseParams) WithPriceTypeID(priceTypeID *string) *PerformancePriceTypesUpdateBaseParams {
	o.SetPriceTypeID(priceTypeID)
	return o
}

// SetPriceTypeID adds the priceTypeId to the performance price types update base params
func (o *PerformancePriceTypesUpdateBaseParams) SetPriceTypeID(priceTypeID *string) {
	o.PriceTypeID = priceTypeID
}

// WriteToRequest writes these params to a swagger request
func (o *PerformancePriceTypesUpdateBaseParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param performanceIds
	qrPerformanceIds := o.PerformanceIds
	qPerformanceIds := qrPerformanceIds
	if qPerformanceIds != "" {

		if err := r.SetQueryParam("performanceIds", qPerformanceIds); err != nil {
			return err
		}
	}

	if o.PriceLayerTypeIds != nil {

		// query param priceLayerTypeIds
		var qrPriceLayerTypeIds string

		if o.PriceLayerTypeIds != nil {
			qrPriceLayerTypeIds = *o.PriceLayerTypeIds
		}
		qPriceLayerTypeIds := qrPriceLayerTypeIds
		if qPriceLayerTypeIds != "" {

			if err := r.SetQueryParam("priceLayerTypeIds", qPriceLayerTypeIds); err != nil {
				return err
			}
		}
	}

	if o.PriceTypeID != nil {

		// query param priceTypeId
		var qrPriceTypeID string

		if o.PriceTypeID != nil {
			qrPriceTypeID = *o.PriceTypeID
		}
		qPriceTypeID := qrPriceTypeID
		if qPriceTypeID != "" {

			if err := r.SetQueryParam("priceTypeId", qPriceTypeID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
