// Code generated by go-swagger; DO NOT EDIT.

package p_u_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/skysyzygy/tq/models"
)

// ZoneGroupsUpdateReader is a Reader for the ZoneGroupsUpdate structure.
type ZoneGroupsUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ZoneGroupsUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewZoneGroupsUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewZoneGroupsUpdateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewZoneGroupsUpdateOK creates a ZoneGroupsUpdateOK with default headers values
func NewZoneGroupsUpdateOK() *ZoneGroupsUpdateOK {
	return &ZoneGroupsUpdateOK{}
}

/*
ZoneGroupsUpdateOK describes a response with status code 200, with default header values.

OK
*/
type ZoneGroupsUpdateOK struct {
	Payload *models.ZoneGroup
}

// IsSuccess returns true when this zone groups update o k response has a 2xx status code
func (o *ZoneGroupsUpdateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this zone groups update o k response has a 3xx status code
func (o *ZoneGroupsUpdateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this zone groups update o k response has a 4xx status code
func (o *ZoneGroupsUpdateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this zone groups update o k response has a 5xx status code
func (o *ZoneGroupsUpdateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this zone groups update o k response a status code equal to that given
func (o *ZoneGroupsUpdateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the zone groups update o k response
func (o *ZoneGroupsUpdateOK) Code() int {
	return 200
}

func (o *ZoneGroupsUpdateOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ReferenceData/ZoneGroups/{id}][%d] zoneGroupsUpdateOK %s", 200, payload)
}

func (o *ZoneGroupsUpdateOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ReferenceData/ZoneGroups/{id}][%d] zoneGroupsUpdateOK %s", 200, payload)
}

func (o *ZoneGroupsUpdateOK) GetPayload() *models.ZoneGroup {
	return o.Payload
}

func (o *ZoneGroupsUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ZoneGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewZoneGroupsUpdateDefault creates a ZoneGroupsUpdateDefault with default headers values
func NewZoneGroupsUpdateDefault(code int) *ZoneGroupsUpdateDefault {
	return &ZoneGroupsUpdateDefault{
		_statusCode: code,
	}
}

/*
ZoneGroupsUpdateDefault describes a response with status code -1, with default header values.

Error
*/
type ZoneGroupsUpdateDefault struct {
	_statusCode int

	Payload *models.ErrorMessage
}

// IsSuccess returns true when this zone groups update default response has a 2xx status code
func (o *ZoneGroupsUpdateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this zone groups update default response has a 3xx status code
func (o *ZoneGroupsUpdateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this zone groups update default response has a 4xx status code
func (o *ZoneGroupsUpdateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this zone groups update default response has a 5xx status code
func (o *ZoneGroupsUpdateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this zone groups update default response a status code equal to that given
func (o *ZoneGroupsUpdateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the zone groups update default response
func (o *ZoneGroupsUpdateDefault) Code() int {
	return o._statusCode
}

func (o *ZoneGroupsUpdateDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ReferenceData/ZoneGroups/{id}][%d] ZoneGroups_Update default %s", o._statusCode, payload)
}

func (o *ZoneGroupsUpdateDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /ReferenceData/ZoneGroups/{id}][%d] ZoneGroups_Update default %s", o._statusCode, payload)
}

func (o *ZoneGroupsUpdateDefault) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *ZoneGroupsUpdateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
