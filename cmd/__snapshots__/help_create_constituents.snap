
[Test_Help - 1]
Create a new constituent with addresses, electronicAddresses, salutations and phones.

Usage:
  tq create Constituents [flags]

Resource:
  /CRM/Constituents/Detail

Query:
  {"Addresses":[{"Id":123}, ...], "ConstituentType":{"Id":123}, "CreateLocation":"string", "CreatedBy":"string", "CreatedDateTime":"2000-01-01T00:00:00.000Z", "DisplayName":"string", "ElectronicAddresses":[{"Id":123}, ...], "EmarketIndicator":{"Id":123}, "FirstName":"string", "Gender":{"Id":123}, "Id":123, "Inactive":{"Id":123}, "InactiveReason":{"Id":123}, "LastActivityDate":"2000-01-01T00:00:00.000Z", "LastGiftDate":"2000-01-01T00:00:00.000Z", "LastName":"string", "LastTicketDate":"2000-01-01T00:00:00.000Z", "MailIndicator":{"Id":123}, "MiddleName":"string", "NameStatus":{"Id":123}, "OriginalSource":{"Id":123}, "PhoneIndicator":{"Id":123}, "PhoneNumbers":[{"Id":123}, ...], "Prefix":{"Id":123}, "ProtectionType":{"Id":123}, "Salutations":[{"Id":123}, ...], "SortName":"string", "Suffix":{"Id":123}, "UpdatedBy":"string", "UpdatedDateTime":"2000-01-01T00:00:00.000Z"}


Flags:
      --constituentusingsnapshot         Create a constituent optionally with primary address, primary salutation, primary electronic address, primary &amp; general phones and affiliates information.
                                         Resource:
                                           /CRM/Constituents/Snapshot
                                         Query:
                                           {"Address":{"Id":123}, "Affiliates":[{"Id":123}, ...], "ConstituentType":{"Id":123}, "CreateLocation":"string", "CreatedBy":"string", "CreatedDateTime":"2000-01-01T00:00:00.000Z", "DisplayName":"string", "EditIndicator":true, "ElectronicAddress":{"Id":123}, "EmarketIndicator":{"Id":123}, "FirstName":"string", "Gender":{"Id":123}, "Id":123, "Inactive":{"Id":123}, "InactiveReason":{"Id":123}, "LastActivityDate":"2000-01-01T00:00:00.000Z", "LastName":"string", "MailIndicator":{"Id":123}, "MiddleName":"string", "NameStatus":{"Id":123}, "OriginalSource":{"Id":123}, "PhoneIndicator":{"Id":123}, "Prefix":{"Id":123}, "PrimaryPhoneNumbers":[{"Id":123}, ...], "ProtectionType":{"Id":123}, "Salutation":{"Id":123}, "ShortDisplayName":"string", "SortName":"string", "Suffix":{"Id":123}, "UpdatedBy":"string", "UpdatedDateTime":"2000-01-01T00:00:00.000Z"}
      --convertgrouptoindividual         Convert existing household to an individual.
                                         Resource:
                                           /CRM/Constituents/ConvertToIndividual
                                         Query:
                                           {"ConstituentID":"string", "AffiliationIdsToBeDeleted":[0, ...], "AffiliationsToAssociationsInfo":[{"AffiliationId":123, "AssociationTypeId":123}, ...], "AssociationIdsToBeDeleted":[0, ...], "AssociationsToAffiliationsInfo":[{"AffiliationTypeId":123, "AssociationId":123}, ...], "IndividualConstituent":{"FirstName":"string", "GenderId":123, "LastName":"string", "MiddleName":"string", "PrefixId":123, "SuffixId":123}, "Merge":{"ConstituentIdToDelete":123, "ConstituentIdToKeep":123}}
      --convertindividualtohousehold     Convert existing individual constituent to a household.
                                         Resource:
                                           /CRM/Constituents/ConvertToHousehold
                                         Query:
                                           {"ConstituentID":"string", "AffiliationTypeId":123, "ConstituentTypeId":123}
      --convertindividualtoorganization  Convert existing individual constituent to an organization.
                                         Resource:
                                           /CRM/Constituents/ConvertToOrganization
                                         Query:
                                           {"ConstituentID":"string", "AffiliationIdsToBeDeleted":[0, ...], "AffiliationsToAssociationsInfo":[{"AffiliationId":123, "AssociationTypeId":123}, ...], "AssociationIdsToBeDeleted":[0, ...], "AssociationsToAffiliationsInfo":[{"AffiliationTypeId":123, "AssociationId":123}, ...], "ConstituentTypeId":123, "LastName":"string"}
  -h, --help                             help for Constituents
      --schedulepurge                    Schedule a constituent to be purged.  This only marks a constituent for purge, but does not actually purge the constituent.  If constituent has open transactions or an order for a future performance, a bad request will be returned indicating open transactions.  Pass IgnoreWarnings = true in request to bypass and schedule.
                                         Resource:
                                           /CRM/Constituents/Purge/Schedule
                                         Query:
                                           {"ConstituentID":"string", "IgnoreWarnings":true}
      --searchbycardnumber               Search for constituents by card number.
                                         Resource:
                                           /CRM/Constituents/Search/ByCardNumber
                                         Query:
                                           {"CardNumber":"string"}
      --swapconstituenta1a2              Swaps A1/A2 names on a household account and regenerates its salutation.
                                         Resource:
                                           /CRM/Constituents/Snapshot/SwapA1A2
                                         Query:
                                           {"ConstituentID":"string"}
      --unschedulepurge                  Unschedule a constituent that has been previously set to be purged.  If a purge has been completed, an error will be returned.
                                         Resource:
                                           /CRM/Constituents/Purge/Unschedule
                                         Query:
                                           {"ConstituentID":"string"}

Global Flags:
  -c, --compact                 compact instead of indented output
  -n, --dryrun                  don't actually do anything, just show what would have happened
  -f, --file string             input file to read (default is to read from stdin)
      --headers stringToString  additional headers to include in outgoing requests in name=value,name=value format
      --highlight               render json with syntax highlighting; default is to use highlighting when output is to terminal
  -i, --in string               input format (csv or json; default is json); csv implies --inflat
      --inflat                  use input flattened by JSONPath dot notation. Combining this with --help will show the flattened format
  -l, --log string              log file to write to (default is no log)
      --no-highlight            render json without syntax highlighting; default is to use highlighting when output is to terminal
  -o, --out string              output format (csv or json; default is json); csv implies --outflat
      --outflat                 use output flattened by JSONPath dot notation
  -v, --verbose                 turns on additional diagnostic output

---
