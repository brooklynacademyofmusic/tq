{{ print "// Code generated by tq/generator; DO NOT EDIT." }}

package cmd

import (
	"github.com/spf13/cobra"
	"github.com/skysyzygy/tq/tq"
)

{{ $op := .op }}
{{- $makeAliases := .makeAliases}}

{{- range $key, $commands := .commands }}
{{- $command := index $commands 0 }}
var {{ print $op "_" $key "_cmd" }} = &cobra.Command{
		Use: `{{ $key }}`,
		Example: `{{ $command.Usage }}`,
		Short: `{{ $command.Short }}`,
		Long:  `{{ $command.Long }}`,
		PreRunE: initTq,
		RunE: func(cmd *cobra.Command, args []string) (err error) {
			{{ if gt (len $commands) 1 -}}
			{{- range slice $commands 1 -}}
			if test, _ := cmd.Flags().GetBool("{{ .Variant }}"); test {
				err = tq.Do(_tq, {{ print "_tq." $op "." .Name }})
			} else{{ " " }} 
			{{- end -}}
			{
				err = tq.Do(_tq, {{ print "_tq." $op "." $command.Name }})
			}
			{{- else }}
			err = tq.Do(_tq, {{ print "_tq." $op "." $command.Name }})
			{{- end }}
			return
		},
	}
{{ end }}

func init() {
	{{- range $key, $commands := .commands }}
		{{ $op }}_cmd.AddCommand({{ print $op "_" $key "_cmd" }})
		{{- if gt (len $commands) 1 }}
			{{- range slice $commands 1 }} 
				{{ print $op "_" $key "_cmd" }}.Flags().Bool("{{ .Variant }}", false, 
					`{{ printf "%v\n%v" .Long .Usage }}`)
			{{- end }} 
		{{- end }}
	{{ end }}
}


